//
// Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
//
//
// Buffer Definitions: 
//
// cbuffer TexInfo
// {
//
//   float4 f4ColorAmbient;             // Offset:    0 Size:    16
//   float fA;                          // Offset:   16 Size:     4
//   float fH;                          // Offset:   20 Size:     4
//   float fBumpStrength;               // Offset:   24 Size:     4
//   float frTransparency;              // Offset:   28 Size:     4
//   float4 f4ColorSSS;                 // Offset:   32 Size:    16
//   float4 f4SSSBRDFParams;            // Offset:   48 Size:    16
//   int aiTexFlag[24];                 // Offset:   64 Size:   372
//
// }
//
// cbuffer ViewportArt
// {
//
//   float4 f4ColorViewportOutline;     // Offset:    0 Size:    16
//   float4 f4FogParams;                // Offset:   16 Size:    16
//   float4x4 mColorModification;       // Offset:   32 Size:    64
//   bool abArt[16];                    // Offset:   96 Size:   244
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim Slot Elements
// ------------------------------ ---------- ------- ----------- ---- --------
// linearSampler                     sampler      NA          NA    0        1
// shadowSampler                   sampler_c      NA          NA    2        1
// shadowMap                         texture  float4          2d   11        1
// tex2D[0]                          texture  float4          2d   12        1
// tex2D[1]                          texture  float4          2d   13        1
// tex2D[2]                          texture  float4          2d   14        1
// tex2D[3]                          texture  float4          2d   15        1
// tex2D[4]                          texture  float4          2d   16        1
// tex2D[5]                          texture  float4          2d   17        1
// tex2D[6]                          texture  float4          2d   18        1
// TexInfo                           cbuffer      NA          NA    1        1
// ViewportArt                       cbuffer      NA          NA    2        1
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue Format   Used
// -------------------- ----- ------ -------- -------- ------ ------
// SV_POSITION              0   xyzw        0      POS  float       
// NORMAL                   0   xyz         1     NONE  float   xyz 
// LIGHTS                   5      w        1     NONE  float      w
// TANGENT                  0   xyz         2     NONE  float   xyz 
// LIGHTS                  16      w        2     NONE  float      w
// BITANGENT                0   xyz         3     NONE  float   xyz 
// LIGHTS                  17      w        3     NONE  float      w
// TEXCOORD                 0   xy          4     NONE  float   xy  
// LIGHTS                   4     zw        4     NONE  float     zw
// TEXCOORD                 1   xyz         5     NONE  float   xyz 
// LIGHTS                  29      w        5     NONE  float      w
// TEXCOORD                 2   xyzw        6     NONE  float   xyzw
// LIGHTS                   0   xyzw        7     NONE  float   xyzw
// LIGHTS                   2   xyzw        8     NONE  float   xyz 
// LIGHTS                   3   xyzw        9     NONE  float   xyzw
// LIGHTS                   6   xyzw       10     NONE   uint   xyz 
// LIGHTS                  10   xyzw       11     NONE   uint   xyzw
// LIGHTS                  11   xyzw       12     NONE  float   xyzw
// LIGHTS                  12   xyzw       13     NONE  float   xyzw
// LIGHTS                  14   xyzw       14     NONE  float   xyz 
// LIGHTS                  15   xyzw       15     NONE  float   xyzw
// LIGHTS                  21   xyzw       16     NONE   uint    yzw
// LIGHTS                  23   xyzw       17     NONE  float   xyzw
// LIGHTS                  24   xyzw       18     NONE  float   xyzw
// LIGHTS                  26   xyzw       19     NONE  float   xyz 
// LIGHTS                  27   xyz        20     NONE  float   xyz 
// LIGHTS                  32   xyzw       21     NONE   uint   x zw
// LIGHTS                  35   xyzw       22     NONE  float   xyzw
// LIGHTS                  36   xyzw       23     NONE  float   xyzw
// LIGHTS                  38   xyzw       24     NONE  float   xyz 
// LIGHTS                  39   xyz        25     NONE  float   xyz 
// LIGHTS                  43   xyzw       26     NONE   uint   xy w
// LIGHTS                  47   xyzw       27     NONE  float   xyzw
// COUNT                    0   x          28     NONE   uint   x   
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue Format   Used
// -------------------- ----- ------ -------- -------- ------ ------
// SV_Target                0   xyzw        0   TARGET  float   xyzw
//
ps_5_0
dcl_globalFlags refactoringAllowed | forceEarlyDepthStencil
dcl_immediateConstantBuffer { { -1, 0, 0, 0},
                              { 0, -1, 0, 0},
                              { 0, 0, -1, 0},
                              { 0, 0, 0, -1} }
dcl_constantbuffer cb1[28], immediateIndexed
dcl_constantbuffer cb2[13], immediateIndexed
dcl_sampler s0, mode_default
dcl_sampler s2, mode_comparison
dcl_resource_texture2d (float,float,float,float) t11
dcl_resource_texture2d (float,float,float,float) t12
dcl_resource_texture2d (float,float,float,float) t13
dcl_resource_texture2d (float,float,float,float) t14
dcl_resource_texture2d (float,float,float,float) t15
dcl_resource_texture2d (float,float,float,float) t16
dcl_resource_texture2d (float,float,float,float) t17
dcl_resource_texture2d (float,float,float,float) t18
dcl_input_ps linear v1.xyz
dcl_input_ps linear v1.w
dcl_input_ps linear v2.xyz
dcl_input_ps linear v2.w
dcl_input_ps linear v3.xyz
dcl_input_ps linear v3.w
dcl_input_ps linear v4.xy
dcl_input_ps linear v4.zw
dcl_input_ps linear v5.xyz
dcl_input_ps linear v5.w
dcl_input_ps linear v6.xyzw
dcl_input_ps linear v7.xyzw
dcl_input_ps linear v8.xyz
dcl_input_ps linear v9.xyzw
dcl_input_ps constant v10.xyz
dcl_input_ps constant v11.xyzw
dcl_input_ps linear v12.xyzw
dcl_input_ps linear v13.xyzw
dcl_input_ps linear v14.xyz
dcl_input_ps linear v15.xyzw
dcl_input_ps constant v16.yzw
dcl_input_ps linear v17.xyzw
dcl_input_ps linear v18.xyzw
dcl_input_ps linear v19.xyz
dcl_input_ps linear v20.xyz
dcl_input_ps constant v21.xzw
dcl_input_ps linear v22.xyzw
dcl_input_ps linear v23.xyzw
dcl_input_ps linear v24.xyz
dcl_input_ps linear v25.xyz
dcl_input_ps constant v26.xyw
dcl_input_ps linear v27.xyzw
dcl_input_ps constant v28.x
dcl_output o0.xyzw
dcl_temps 29
ilt r0.x, l(1), cb1[26].x
ilt r0.y, l(1), cb1[27].x
or r0.x, r0.y, r0.x
if_nz r0.x
  itof r0.x, cb1[24].x
  itof r0.y, cb1[25].x
  itof r0.z, cb1[26].x
  itof r0.w, cb1[27].x
  div r0.x, r0.x, r0.z
  div r0.z, l(1.000000), r0.z
  mul r0.z, r0.z, v4.x
  add r1.x, r0.z, r0.x
  div r0.x, r0.y, r0.w
  div r0.y, l(1.000000), r0.w
  mul r0.y, r0.y, v4.y
  add r1.y, r0.y, r0.x
else 
  mov r1.xy, v4.xyxx
endif 
mov r1.xy, r1.xyxx
ine r0.x, l(0, 0, 0, 0), cb1[20].x
if_nz r0.x
  mov r0.yzw, -v6.xxyz
  add r0.yzw, r0.yyzw, v5.xxyz
  dp3 r1.z, r0.yzwy, r0.yzwy
  rsq r1.z, r1.z
  mul r0.yzw, r0.yyzw, r1.zzzz
  mov r0.yzw, -r0.yyzw
  dp3 r1.z, v1.xyzx, v1.xyzx
  rsq r1.z, r1.z
  mul r2.xyz, r1.zzzz, v1.xyzx
  mov r3.xyz, r2.zxyz
  mov r4.xyz, v2.xyzx
  mul r5.xyz, r3.zxyz, r4.zxyz
  mul r3.xyz, r3.xyzx, r4.yzxy
  mov r3.xyz, -r3.xyzx
  add r3.xyz, r3.xyzx, r5.xyzx
  mov r3.xyz, -r3.xyzx
  dp3 r5.x, r0.yzwy, v2.xyzx
  dp3 r5.y, r0.yzwy, r3.xyzx
  dp3 r1.z, r0.yzwy, r2.xyzx
  mov r2.xy, -r5.xyxx
  mul r2.xy, r2.xyxx, l(0.010000, 0.010000, 0.000000, 0.000000)
  div r1.zw, r2.xxxy, r1.zzzz
  dp3 r0.y, r0.yzwy, v1.xyzx
  mul r0.y, r0.y, l(-19.000000)
  add r0.y, r0.y, l(20.000000)
  ftoi r0.y, r0.y
  itof r0.z, r0.y
  div r0.z, l(1.000000), r0.z
  mul r1.zw, r0.zzzz, r1.zzzw
  deriv_rtx_coarse r2.xy, r1.xyxx
  deriv_rty_coarse r2.zw, r1.xxxy
  mov r0.w, l(0)
  mov r5.xy, l(0,0,0,0)
  mov r0.z, -r0.z
  add r3.w, r0.z, l(1.000000)
  mov r4.w, l(1.000000)
  mov r5.zw, r5.xxxy
  mov r6.xy, r5.xyxx
  mov r6.zw, r5.xxxy
  mov r7.x, r0.w
  mov r7.y, r3.w
  mov r7.z, r4.w
  mov r7.w, r0.w
  loop 
    iadd r8.x, r0.y, l(1)
    ilt r8.y, r7.x, r8.x
    breakc_z r8.y
    add r8.yz, r1.xxyx, r5.zzwz
    sample_d_indexable(texture2d)(float,float,float,float) r8.y, r8.yzyy, t17.xyzw, s0, r2.xyxx, r2.zwzz
    lt r8.z, r7.y, r8.y
    if_nz r8.z
      mov r8.z, -r7.z
      add r8.w, r7.w, r8.z
      mov r9.x, -r8.y
      add r9.x, r7.w, r9.x
      add r9.x, r7.y, r9.x
      add r8.z, r8.z, r9.x
      div r8.z, r8.w, r8.z
      mul r8.zw, r1.zzzw, r8.zzzz
      add r6.zw, r6.xxxy, r8.zzzw
      mov r7.x, r8.x
    else 
      iadd r7.x, r7.x, l(1)
      mov r6.xy, r5.zwzz
      mov r7.z, r7.y
      mov r7.w, r8.y
      add r5.zw, r1.zzzw, r5.zzzw
      add r7.y, r0.z, r7.y
    endif 
  endloop 
  add r0.yz, r1.xxyx, r6.zzwz
  sample_indexable(texture2d)(float,float,float,float) r0.w, r0.yzyy, t17.xzwy, s0
  mul r2.xyz, r4.xyzx, r0.wwww
  mul r3.xyz, r3.xyzx, r0.wwww
  add r2.xyz, r2.xyzx, r3.xyzx
  add r2.xyz, r2.xyzx, v1.xyzx
  dp3 r0.w, r2.xyzx, r2.xyzx
  rsq r0.w, r0.w
  mul r2.xyz, r0.wwww, r2.xyzx
else 
  mov r2.xyz, v1.xyzx
  mov r0.yz, r1.xxyx
endif 
ine r0.w, l(0, 0, 0, 0), cb1[7].x
if_nz r0.w
  sample_indexable(texture2d)(float,float,float,float) r1.zw, r1.xyxx, t15.zwxy, s0
  mul r1.zw, r1.zzzw, l(0.000000, 0.000000, 2.000000, 2.000000)
  add r1.zw, r1.zzzw, l(0.000000, 0.000000, -1.000000, -1.000000)
  mul r1.zw, r1.zzzw, cb1[1].zzzz
  mul r3.xyz, r1.zzzz, v2.xyzx
  mul r4.xyz, r1.wwww, v3.xyzx
  add r3.xyz, r3.xyzx, r4.xyzx
  add r3.xyz, r2.xyzx, r3.xyzx
  dp3 r1.z, r3.xyzx, r3.xyzx
  rsq r1.z, r1.z
  mul r2.xyz, r1.zzzz, r3.xyzx
endif 
resinfo_indexable(texture2d)(float,float,float,float) r1.zw, l(0), t11.zwxy
if_nz v28.x
  mov r3.xyz, v7.yzwy
  mov r4.xyz, v8.xyzx
  mov r5.xyz, v9.xyzx
  mov r6.xyz, v12.xyzx
  mov r2.w, v7.x
  mov r3.w, v4.z
  mov r4.w, v1.w
  mov r5.w, v11.x
  mov r6.w, v12.w
  ieq r5.w, r5.w, l(3)
  if_nz r5.w
    dp3 r5.w, r3.xyzx, r3.xyzx
    rsq r5.w, r5.w
    mul r7.xyz, r3.xyzx, r5.wwww
    dp3 r5.w, r5.xyzx, r5.xyzx
    rsq r5.w, r5.w
    mul r5.xyz, r5.wwww, r5.xyzx
    dp3 r5.x, r7.xyzx, r5.xyzx
    lt r5.y, r4.w, r5.x
    not r5.z, r5.y
    if_nz r5.y
      mov r4.w, -r4.w
      add r5.x, r4.w, r5.x
      add r3.w, r3.w, r4.w
      div r3.w, r5.x, r3.w
    else 
      mov r3.w, l(1.000000)
    endif 
    if_z r5.z
      if_nz v10.x
        div r5.xyw, r6.xyxz, r6.wwww
        lt r4.w, r5.x, l(-1.000000)
        lt r6.w, l(1.000000), r5.x
        or r4.w, r4.w, r6.w
        lt r6.w, r5.y, l(-1.000000)
        or r4.w, r4.w, r6.w
        lt r6.w, l(1.000000), r5.y
        or r4.w, r4.w, r6.w
        lt r6.w, r5.w, l(0.000000)
        or r4.w, r4.w, r6.w
        lt r6.w, l(3.000000), r5.w
        or r4.w, r4.w, r6.w
        not r6.w, r4.w
        not r6.w, r6.w
        if_z r4.w
          mov r7.xy, -r1.xyxx
          add r7.xy, r0.yzyy, r7.xyxx
          mul r7.x, r7.x, l(0.200000)
          mov r7.x, -r7.x
          add r5.x, r5.x, r7.x
          mul r7.x, r7.y, l(0.200000)
          mov r7.x, -r7.x
          add r5.y, r5.y, r7.x
          mul r5.x, r5.x, l(0.500000)
          add r7.x, r5.x, l(0.500000)
          mul r5.x, r5.y, l(-0.500000)
          add r7.y, r5.x, l(0.500000)
          if_nz v10.y
            mov r5.x, r1.z
            mov r5.y, r1.w
            mov r7.zw, r0.yyyz
            mov r7.zw, r7.zzzw
            dp2 r7.z, r7.zwzz, l(23.140692, 2.665144, 0.000000, 0.000000)
            mul r7.z, r7.z, l(256.000000)
            add r7.z, r7.z, l(0.000000)
            div r7.w, l(123456792.000000), r7.z
            mov r8.x, -r7.w
            max r8.y, r7.w, r8.x
            ge r7.w, r7.w, r8.x
            frc r8.x, r8.y
            mov r8.y, -r8.x
            movc r7.w, r7.w, r8.x, r8.y
            mul r7.z, r7.z, r7.w
            sincos null, r7.z, r7.z
            frc r7.z, r7.z
            mov r7.z, r7.z
            add r7.z, r7.z, l(0.500000)
            mul r5.x, r5.x, r7.z
            div r8.x, l(-1.000000), r5.x
            mul r5.y, r5.y, r7.z
            div r8.y, l(-1.000000), r5.y
            add r7.zw, r7.xxxy, r8.xxxy
            sample_c_lz_indexable(texture2d)(float,float,float,float) r7.z, r7.zwzz, t11.xxxx, s2, r5.w
            mul r7.z, r7.z, l(0.800000)
            add r7.z, r7.z, l(0.000000)
            mov r8.x, l(0)
            div r8.y, l(-1.000000), r5.y
            add r8.xy, r7.xyxx, r8.xyxx
            sample_c_lz_indexable(texture2d)(float,float,float,float) r7.w, r8.xyxx, t11.xxxx, s2, r5.w
            mul r7.w, r7.w, l(0.800000)
            add r7.z, r7.w, r7.z
            mov r8.x, l(0)
            div r8.y, l(-1.000000), r5.y
            add r8.xy, r7.xyxx, r8.xyxx
            sample_c_lz_indexable(texture2d)(float,float,float,float) r7.w, r8.xyxx, t11.xxxx, s2, r5.w
            mul r7.w, r7.w, l(0.800000)
            add r7.z, r7.w, r7.z
            div r8.x, l(1.000000), r5.x
            div r8.y, l(-1.000000), r5.y
            add r8.xy, r7.xyxx, r8.xyxx
            sample_c_lz_indexable(texture2d)(float,float,float,float) r7.w, r8.xyxx, t11.xxxx, s2, r5.w
            mul r7.w, r7.w, l(0.800000)
            add r7.z, r7.w, r7.z
            div r8.x, l(-1.000000), r5.x
            mov r8.y, l(0)
            add r8.xy, r7.xyxx, r8.xyxx
            sample_c_lz_indexable(texture2d)(float,float,float,float) r7.w, r8.xyxx, t11.xxxx, s2, r5.w
            mul r7.w, r7.w, l(0.800000)
            add r7.z, r7.w, r7.z
            add r8.xy, r7.xyxx, l(0.000000, 0.000000, 0.000000, 0.000000)
            sample_c_lz_indexable(texture2d)(float,float,float,float) r7.w, r8.xyxx, t11.xxxx, s2, r5.w
            mul r7.w, r7.w, l(0.800000)
            add r7.z, r7.w, r7.z
            add r7.z, r7.w, r7.z
            div r8.x, l(1.000000), r5.x
            mov r8.y, l(0)
            add r8.xy, r7.xyxx, r8.xyxx
            sample_c_lz_indexable(texture2d)(float,float,float,float) r8.x, r8.xyxx, t11.xxxx, s2, r5.w
            mul r8.x, r8.x, l(0.800000)
            add r7.z, r7.z, r8.x
            div r8.x, l(-1.000000), r5.x
            mov r8.y, l(0)
            add r8.xy, r7.xyxx, r8.xyxx
            sample_c_lz_indexable(texture2d)(float,float,float,float) r8.x, r8.xyxx, t11.xxxx, s2, r5.w
            mul r8.x, r8.x, l(0.800000)
            add r7.z, r7.z, r8.x
            add r7.z, r7.w, r7.z
            add r7.z, r7.w, r7.z
            div r8.x, l(1.000000), r5.x
            mov r8.y, l(0)
            add r8.xy, r7.xyxx, r8.xyxx
            sample_c_lz_indexable(texture2d)(float,float,float,float) r7.w, r8.xyxx, t11.xxxx, s2, r5.w
            mul r7.w, r7.w, l(0.800000)
            add r7.z, r7.w, r7.z
            div r8.x, l(-1.000000), r5.x
            div r8.y, l(1.000000), r5.y
            add r8.xy, r7.xyxx, r8.xyxx
            sample_c_lz_indexable(texture2d)(float,float,float,float) r7.w, r8.xyxx, t11.xxxx, s2, r5.w
            mul r7.w, r7.w, l(0.800000)
            add r7.z, r7.w, r7.z
            mov r8.x, l(0)
            div r8.y, l(1.000000), r5.y
            add r8.xy, r7.xyxx, r8.xyxx
            sample_c_lz_indexable(texture2d)(float,float,float,float) r7.w, r8.xyxx, t11.xxxx, s2, r5.w
            mul r7.w, r7.w, l(0.800000)
            add r7.z, r7.w, r7.z
            mov r8.x, l(0)
            div r8.y, l(1.000000), r5.y
            add r8.xy, r7.xyxx, r8.xyxx
            sample_c_lz_indexable(texture2d)(float,float,float,float) r7.w, r8.xyxx, t11.xxxx, s2, r5.w
            mul r7.w, r7.w, l(0.800000)
            add r7.z, r7.w, r7.z
            div r8.x, l(1.000000), r5.x
            div r8.y, l(1.000000), r5.y
            add r8.xy, r7.xyxx, r8.xyxx
            sample_c_lz_indexable(texture2d)(float,float,float,float) r7.w, r8.xyxx, t11.xxxx, s2, r5.w
            mul r7.w, r7.w, l(0.800000)
            add r7.z, r7.w, r7.z
            if_nz v10.z
              mov r7.w, -r5.w
              max r7.w, r5.w, r7.w
              mul r7.w, r7.w, l(0.100000)
              add r8.x, r7.w, r7.x
              add r8.y, r7.w, r7.y
              div r9.x, l(-1.000000), r5.x
              div r9.y, l(-1.000000), r5.y
              add r8.zw, r8.xxxy, r9.xxxy
              sample_c_lz_indexable(texture2d)(float,float,float,float) r7.w, r8.zwzz, t11.xxxx, s2, r5.w
              mul r7.w, r7.w, l(0.200000)
              add r7.w, r7.w, r7.z
              mov r9.x, l(0)
              div r9.y, l(-1.000000), r5.y
              add r8.zw, r8.xxxy, r9.xxxy
              sample_c_lz_indexable(texture2d)(float,float,float,float) r8.z, r8.zwzz, t11.xxxx, s2, r5.w
              mul r8.z, r8.z, l(0.200000)
              add r7.w, r7.w, r8.z
              mov r9.x, l(0)
              div r9.y, l(-1.000000), r5.y
              add r8.zw, r8.xxxy, r9.xxxy
              sample_c_lz_indexable(texture2d)(float,float,float,float) r8.z, r8.zwzz, t11.xxxx, s2, r5.w
              mul r8.z, r8.z, l(0.200000)
              add r7.w, r7.w, r8.z
              div r9.x, l(1.000000), r5.x
              div r9.y, l(-1.000000), r5.y
              add r8.zw, r8.xxxy, r9.xxxy
              sample_c_lz_indexable(texture2d)(float,float,float,float) r8.z, r8.zwzz, t11.xxxx, s2, r5.w
              mul r8.z, r8.z, l(0.200000)
              add r7.w, r7.w, r8.z
              div r9.x, l(-1.000000), r5.x
              mov r9.y, l(0)
              add r8.zw, r8.xxxy, r9.xxxy
              sample_c_lz_indexable(texture2d)(float,float,float,float) r8.z, r8.zwzz, t11.xxxx, s2, r5.w
              mul r8.z, r8.z, l(0.200000)
              add r7.w, r7.w, r8.z
              add r8.zw, r8.xxxy, l(0.000000, 0.000000, 0.000000, 0.000000)
              sample_c_lz_indexable(texture2d)(float,float,float,float) r8.z, r8.zwzz, t11.xxxx, s2, r5.w
              mul r8.z, r8.z, l(0.200000)
              add r7.w, r7.w, r8.z
              add r7.w, r8.z, r7.w
              div r9.x, l(1.000000), r5.x
              mov r9.y, l(0)
              add r9.xy, r8.xyxx, r9.xyxx
              sample_c_lz_indexable(texture2d)(float,float,float,float) r8.w, r9.xyxx, t11.xxxx, s2, r5.w
              mul r8.w, r8.w, l(0.200000)
              add r7.w, r7.w, r8.w
              div r9.x, l(-1.000000), r5.x
              mov r9.y, l(0)
              add r9.xy, r8.xyxx, r9.xyxx
              sample_c_lz_indexable(texture2d)(float,float,float,float) r8.w, r9.xyxx, t11.xxxx, s2, r5.w
              mul r8.w, r8.w, l(0.200000)
              add r7.w, r7.w, r8.w
              add r7.w, r8.z, r7.w
              add r7.w, r8.z, r7.w
              div r9.x, l(1.000000), r5.x
              mov r9.y, l(0)
              add r8.zw, r8.xxxy, r9.xxxy
              sample_c_lz_indexable(texture2d)(float,float,float,float) r8.z, r8.zwzz, t11.xxxx, s2, r5.w
              mul r8.z, r8.z, l(0.200000)
              add r7.w, r7.w, r8.z
              div r9.x, l(-1.000000), r5.x
              div r9.y, l(1.000000), r5.y
              add r8.zw, r8.xxxy, r9.xxxy
              sample_c_lz_indexable(texture2d)(float,float,float,float) r8.z, r8.zwzz, t11.xxxx, s2, r5.w
              mul r8.z, r8.z, l(0.200000)
              add r7.w, r7.w, r8.z
              mov r9.x, l(0)
              div r9.y, l(1.000000), r5.y
              add r8.zw, r8.xxxy, r9.xxxy
              sample_c_lz_indexable(texture2d)(float,float,float,float) r8.z, r8.zwzz, t11.xxxx, s2, r5.w
              mul r8.z, r8.z, l(0.200000)
              add r7.w, r7.w, r8.z
              mov r9.x, l(0)
              div r9.y, l(1.000000), r5.y
              add r8.zw, r8.xxxy, r9.xxxy
              sample_c_lz_indexable(texture2d)(float,float,float,float) r8.z, r8.zwzz, t11.xxxx, s2, r5.w
              mul r8.z, r8.z, l(0.200000)
              add r7.w, r7.w, r8.z
              div r9.x, l(1.000000), r5.x
              div r9.y, l(1.000000), r5.y
              add r5.xy, r8.xyxx, r9.xyxx
              sample_c_lz_indexable(texture2d)(float,float,float,float) r5.x, r5.xyxx, t11.xxxx, s2, r5.w
              mul r5.x, r5.x, l(0.200000)
              add r7.z, r5.x, r7.w
            endif 
            div r5.x, r7.z, l(4.000000)
          else 
            sample_c_lz_indexable(texture2d)(float,float,float,float) r5.y, r7.xyxx, t11.xxxx, s2, r5.w
            div r5.x, r5.y, l(4.000000)
          endif 
        else 
          mov r5.x, l(1.000000)
        endif 
        or r4.w, r4.w, r6.w
      else 
        sample_c_lz_indexable(texture2d)(float,float,float,float) r5.y, r6.xyxx, t11.xxxx, s2, r6.z
        div r5.x, r5.y, l(4.000000)
        mov r4.w, l(0)
      endif 
    else 
      mov r5.x, l(1.000000)
      mov r4.w, l(-1)
    endif 
    or r4.w, r5.z, r4.w
  else 
    mov r3.w, l(1.000000)
    mov r5.x, l(1.000000)
    mov r4.w, l(0)
  endif 
  if_z r4.w
    dp3 r4.w, r2.xyzx, r2.xyzx
    rsq r4.w, r4.w
    mul r5.yzw, r2.xxyz, r4.wwww
    dp3 r3.x, r3.xyzx, r5.yzwy
    max r3.x, r3.x, l(0.000000)
    min r3.x, r3.x, l(1.000000)
    mul r2.w, r2.w, r3.x
    mul r3.xyz, r4.xyzx, r2.wwww
    mul r3.xyz, r3.wwww, r3.xyzx
    mul r3.xyz, r5.xxxx, r3.xyzx
    add r3.xyz, r3.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
  else 
    mov r3.xyz, l(0,0,0,0)
  endif 
  mov r2.w, l(0)
else 
  mov r3.xyz, l(0,0,0,0)
  mov r2.w, l(-1)
endif 
not r3.w, r2.w
and r3.w, r3.w, l(-1)
ult r4.x, l(1), v28.x
and r4.y, r3.w, r4.x
if_nz r4.y
  mov r4.yzw, v13.yyzw
  mov r5.xyz, v14.xyzx
  mov r6.xyz, v15.xyzx
  mov r7.xyz, v17.xyzx
  mov r5.w, v13.x
  mov r6.w, v2.w
  mov r7.w, v3.w
  mov r8.x, v16.y
  mov r8.y, v17.w
  if_nz r3.w
    ieq r8.x, r8.x, l(3)
    if_nz r8.x
      dp3 r8.x, r4.yzwy, r4.yzwy
      rsq r8.x, r8.x
      mul r8.xzw, r4.yyzw, r8.xxxx
      dp3 r9.x, r6.xyzx, r6.xyzx
      rsq r9.x, r9.x
      mul r6.xyz, r6.xyzx, r9.xxxx
      dp3 r6.x, r8.xzwx, r6.xyzx
      lt r6.y, r7.w, r6.x
      not r6.z, r6.y
      if_nz r6.y
        mov r6.y, -r7.w
        add r6.x, r6.y, r6.x
        add r6.y, r6.y, r6.w
        div r6.x, r6.x, r6.y
      else 
        mov r6.x, l(1.000000)
      endif 
      if_z r6.z
        if_nz v11.y
          div r8.xyz, r7.xyzx, r8.yyyy
          lt r6.y, r8.x, l(-1.000000)
          lt r6.w, l(1.000000), r8.x
          or r6.y, r6.w, r6.y
          lt r6.w, r8.y, l(-1.000000)
          or r6.y, r6.w, r6.y
          lt r6.w, l(1.000000), r8.y
          or r6.y, r6.w, r6.y
          lt r6.w, r8.z, l(0.000000)
          or r6.y, r6.w, r6.y
          lt r6.w, l(3.000000), r8.z
          or r6.y, r6.w, r6.y
          not r6.w, r6.y
          not r6.w, r6.w
          if_z r6.y
            mov r9.xy, -r1.xyxx
            add r9.xy, r0.yzyy, r9.xyxx
            mul r7.w, r9.x, l(0.200000)
            mov r7.w, -r7.w
            add r7.w, r7.w, r8.x
            mul r8.x, r9.y, l(0.200000)
            mov r8.x, -r8.x
            add r8.x, r8.x, r8.y
            mul r7.w, r7.w, l(0.500000)
            add r9.x, r7.w, l(0.500000)
            mul r7.w, r8.x, l(-0.500000)
            add r9.y, r7.w, l(0.500000)
            if_nz v11.z
              mov r7.w, r1.z
              mov r8.x, r1.w
              mov r8.yw, r0.yyyz
              mov r8.yw, r8.yyyw
              dp2 r8.y, r8.ywyy, l(23.140692, 2.665144, 0.000000, 0.000000)
              mul r8.y, r8.y, l(256.000000)
              add r8.y, r8.y, l(0.000000)
              div r8.w, l(123456792.000000), r8.y
              mov r9.z, -r8.w
              max r9.w, r8.w, r9.z
              ge r8.w, r8.w, r9.z
              frc r9.z, r9.w
              mov r9.w, -r9.z
              movc r8.w, r8.w, r9.z, r9.w
              mul r8.y, r8.y, r8.w
              sincos null, r8.y, r8.y
              frc r8.y, r8.y
              mov r8.y, r8.y
              add r8.y, r8.y, l(0.500000)
              mul r7.w, r7.w, r8.y
              div r10.x, l(-1.000000), r7.w
              mul r8.x, r8.y, r8.x
              div r10.y, l(-1.000000), r8.x
              add r8.yw, r9.xxxy, r10.xxxy
              sample_c_lz_indexable(texture2d)(float,float,float,float) r8.y, r8.ywyy, t11.xxxx, s2, r8.z
              mul r8.y, r8.y, l(0.800000)
              add r8.y, r8.y, l(0.000000)
              mov r10.x, l(0)
              div r10.y, l(-1.000000), r8.x
              add r9.zw, r9.xxxy, r10.xxxy
              sample_c_lz_indexable(texture2d)(float,float,float,float) r8.w, r9.zwzz, t11.xxxx, s2, r8.z
              mul r8.w, r8.w, l(0.800000)
              add r8.y, r8.w, r8.y
              mov r10.x, l(0)
              div r10.y, l(-1.000000), r8.x
              add r9.zw, r9.xxxy, r10.xxxy
              sample_c_lz_indexable(texture2d)(float,float,float,float) r8.w, r9.zwzz, t11.xxxx, s2, r8.z
              mul r8.w, r8.w, l(0.800000)
              add r8.y, r8.w, r8.y
              div r10.x, l(1.000000), r7.w
              div r10.y, l(-1.000000), r8.x
              add r9.zw, r9.xxxy, r10.xxxy
              sample_c_lz_indexable(texture2d)(float,float,float,float) r8.w, r9.zwzz, t11.xxxx, s2, r8.z
              mul r8.w, r8.w, l(0.800000)
              add r8.y, r8.w, r8.y
              div r10.x, l(-1.000000), r7.w
              mov r10.y, l(0)
              add r9.zw, r9.xxxy, r10.xxxy
              sample_c_lz_indexable(texture2d)(float,float,float,float) r8.w, r9.zwzz, t11.xxxx, s2, r8.z
              mul r8.w, r8.w, l(0.800000)
              add r8.y, r8.w, r8.y
              add r9.zw, r9.xxxy, l(0.000000, 0.000000, 0.000000, 0.000000)
              sample_c_lz_indexable(texture2d)(float,float,float,float) r8.w, r9.zwzz, t11.xxxx, s2, r8.z
              mul r8.w, r8.w, l(0.800000)
              add r8.y, r8.w, r8.y
              add r8.y, r8.w, r8.y
              div r10.x, l(1.000000), r7.w
              mov r10.y, l(0)
              add r9.zw, r9.xxxy, r10.xxxy
              sample_c_lz_indexable(texture2d)(float,float,float,float) r9.z, r9.zwzz, t11.xxxx, s2, r8.z
              mul r9.z, r9.z, l(0.800000)
              add r8.y, r8.y, r9.z
              div r10.x, l(-1.000000), r7.w
              mov r10.y, l(0)
              add r9.zw, r9.xxxy, r10.xxxy
              sample_c_lz_indexable(texture2d)(float,float,float,float) r9.z, r9.zwzz, t11.xxxx, s2, r8.z
              mul r9.z, r9.z, l(0.800000)
              add r8.y, r8.y, r9.z
              add r8.y, r8.w, r8.y
              add r8.y, r8.w, r8.y
              div r10.x, l(1.000000), r7.w
              mov r10.y, l(0)
              add r9.zw, r9.xxxy, r10.xxxy
              sample_c_lz_indexable(texture2d)(float,float,float,float) r8.w, r9.zwzz, t11.xxxx, s2, r8.z
              mul r8.w, r8.w, l(0.800000)
              add r8.y, r8.w, r8.y
              div r10.x, l(-1.000000), r7.w
              div r10.y, l(1.000000), r8.x
              add r9.zw, r9.xxxy, r10.xxxy
              sample_c_lz_indexable(texture2d)(float,float,float,float) r8.w, r9.zwzz, t11.xxxx, s2, r8.z
              mul r8.w, r8.w, l(0.800000)
              add r8.y, r8.w, r8.y
              mov r10.x, l(0)
              div r10.y, l(1.000000), r8.x
              add r9.zw, r9.xxxy, r10.xxxy
              sample_c_lz_indexable(texture2d)(float,float,float,float) r8.w, r9.zwzz, t11.xxxx, s2, r8.z
              mul r8.w, r8.w, l(0.800000)
              add r8.y, r8.w, r8.y
              mov r10.x, l(0)
              div r10.y, l(1.000000), r8.x
              add r9.zw, r9.xxxy, r10.xxxy
              sample_c_lz_indexable(texture2d)(float,float,float,float) r8.w, r9.zwzz, t11.xxxx, s2, r8.z
              mul r8.w, r8.w, l(0.800000)
              add r8.y, r8.w, r8.y
              div r10.x, l(1.000000), r7.w
              div r10.y, l(1.000000), r8.x
              add r9.zw, r9.xxxy, r10.xxxy
              sample_c_lz_indexable(texture2d)(float,float,float,float) r8.w, r9.zwzz, t11.xxxx, s2, r8.z
              mul r8.w, r8.w, l(0.800000)
              add r8.y, r8.w, r8.y
              if_nz v11.w
                mov r8.w, -r8.z
                max r8.w, r8.w, r8.z
                mul r8.w, r8.w, l(0.100000)
                add r10.x, r8.w, r9.x
                add r10.y, r8.w, r9.y
                div r11.x, l(-1.000000), r7.w
                div r11.y, l(-1.000000), r8.x
                add r9.zw, r10.xxxy, r11.xxxy
                sample_c_lz_indexable(texture2d)(float,float,float,float) r8.w, r9.zwzz, t11.xxxx, s2, r8.z
                mul r8.w, r8.w, l(0.200000)
                add r8.w, r8.w, r8.y
                mov r11.x, l(0)
                div r11.y, l(-1.000000), r8.x
                add r9.zw, r10.xxxy, r11.xxxy
                sample_c_lz_indexable(texture2d)(float,float,float,float) r9.z, r9.zwzz, t11.xxxx, s2, r8.z
                mul r9.z, r9.z, l(0.200000)
                add r8.w, r8.w, r9.z
                mov r11.x, l(0)
                div r11.y, l(-1.000000), r8.x
                add r9.zw, r10.xxxy, r11.xxxy
                sample_c_lz_indexable(texture2d)(float,float,float,float) r9.z, r9.zwzz, t11.xxxx, s2, r8.z
                mul r9.z, r9.z, l(0.200000)
                add r8.w, r8.w, r9.z
                div r11.x, l(1.000000), r7.w
                div r11.y, l(-1.000000), r8.x
                add r9.zw, r10.xxxy, r11.xxxy
                sample_c_lz_indexable(texture2d)(float,float,float,float) r9.z, r9.zwzz, t11.xxxx, s2, r8.z
                mul r9.z, r9.z, l(0.200000)
                add r8.w, r8.w, r9.z
                div r11.x, l(-1.000000), r7.w
                mov r11.y, l(0)
                add r9.zw, r10.xxxy, r11.xxxy
                sample_c_lz_indexable(texture2d)(float,float,float,float) r9.z, r9.zwzz, t11.xxxx, s2, r8.z
                mul r9.z, r9.z, l(0.200000)
                add r8.w, r8.w, r9.z
                add r9.zw, r10.xxxy, l(0.000000, 0.000000, 0.000000, 0.000000)
                sample_c_lz_indexable(texture2d)(float,float,float,float) r9.z, r9.zwzz, t11.xxxx, s2, r8.z
                mul r9.z, r9.z, l(0.200000)
                add r8.w, r8.w, r9.z
                add r8.w, r9.z, r8.w
                div r11.x, l(1.000000), r7.w
                mov r11.y, l(0)
                add r10.zw, r10.xxxy, r11.xxxy
                sample_c_lz_indexable(texture2d)(float,float,float,float) r9.w, r10.zwzz, t11.xxxx, s2, r8.z
                mul r9.w, r9.w, l(0.200000)
                add r8.w, r8.w, r9.w
                div r11.x, l(-1.000000), r7.w
                mov r11.y, l(0)
                add r10.zw, r10.xxxy, r11.xxxy
                sample_c_lz_indexable(texture2d)(float,float,float,float) r9.w, r10.zwzz, t11.xxxx, s2, r8.z
                mul r9.w, r9.w, l(0.200000)
                add r8.w, r8.w, r9.w
                add r8.w, r9.z, r8.w
                add r8.w, r9.z, r8.w
                div r11.x, l(1.000000), r7.w
                mov r11.y, l(0)
                add r9.zw, r10.xxxy, r11.xxxy
                sample_c_lz_indexable(texture2d)(float,float,float,float) r9.z, r9.zwzz, t11.xxxx, s2, r8.z
                mul r9.z, r9.z, l(0.200000)
                add r8.w, r8.w, r9.z
                div r11.x, l(-1.000000), r7.w
                div r11.y, l(1.000000), r8.x
                add r9.zw, r10.xxxy, r11.xxxy
                sample_c_lz_indexable(texture2d)(float,float,float,float) r9.z, r9.zwzz, t11.xxxx, s2, r8.z
                mul r9.z, r9.z, l(0.200000)
                add r8.w, r8.w, r9.z
                mov r11.x, l(0)
                div r11.y, l(1.000000), r8.x
                add r9.zw, r10.xxxy, r11.xxxy
                sample_c_lz_indexable(texture2d)(float,float,float,float) r9.z, r9.zwzz, t11.xxxx, s2, r8.z
                mul r9.z, r9.z, l(0.200000)
                add r8.w, r8.w, r9.z
                mov r11.x, l(0)
                div r11.y, l(1.000000), r8.x
                add r9.zw, r10.xxxy, r11.xxxy
                sample_c_lz_indexable(texture2d)(float,float,float,float) r9.z, r9.zwzz, t11.xxxx, s2, r8.z
                mul r9.z, r9.z, l(0.200000)
                add r8.w, r8.w, r9.z
                div r11.x, l(1.000000), r7.w
                div r11.y, l(1.000000), r8.x
                add r9.zw, r10.xxxy, r11.xxxy
                sample_c_lz_indexable(texture2d)(float,float,float,float) r7.w, r9.zwzz, t11.xxxx, s2, r8.z
                mul r7.w, r7.w, l(0.200000)
                add r8.y, r7.w, r8.w
              endif 
              div r7.w, r8.y, l(4.000000)
            else 
              sample_c_lz_indexable(texture2d)(float,float,float,float) r8.x, r9.xyxx, t11.xxxx, s2, r8.z
              div r7.w, r8.x, l(4.000000)
            endif 
          else 
            mov r7.w, l(1.000000)
          endif 
          or r6.y, r6.y, r6.w
        else 
          sample_c_lz_indexable(texture2d)(float,float,float,float) r6.w, r7.xyxx, t11.xxxx, s2, r7.z
          div r7.w, r6.w, l(4.000000)
          mov r6.y, l(0)
        endif 
      else 
        mov r7.w, l(1.000000)
        mov r6.y, l(-1)
      endif 
      or r6.y, r6.z, r6.y
    else 
      mov r6.x, l(1.000000)
      mov r7.w, l(1.000000)
      mov r6.y, l(0)
    endif 
    if_z r6.y
      dp3 r6.y, r2.xyzx, r2.xyzx
      rsq r6.y, r6.y
      mul r6.yzw, r2.xxyz, r6.yyyy
      dp3 r4.y, r4.yzwy, r6.yzwy
      max r4.y, r4.y, l(0.000000)
      min r4.y, r4.y, l(1.000000)
      mul r4.y, r5.w, r4.y
      mul r4.yzw, r5.xxyz, r4.yyyy
      mul r4.yzw, r6.xxxx, r4.yyzw
      mul r4.yzw, r7.wwww, r4.yyzw
      add r3.xyz, r3.xyzx, r4.yzwy
    endif 
    mov r4.y, l(0)
    mov r4.z, l(0)
  else 
    mov r4.y, l(-1)
    mov r4.z, l(-1)
  endif 
  and r4.z, r3.w, r4.z
  or r2.w, r2.w, r4.z
  and r3.w, r3.w, r4.y
  iadd r3.w, r3.w, l(0)
else 
  mov r3.w, l(0)
  mov r2.w, l(-1)
endif 
not r4.y, r2.w
not r4.z, r3.w
and r4.z, r4.z, r4.y
ult r4.w, l(2), v28.x
and r4.z, r4.z, r4.w
if_nz r4.z
  mov r5.xyz, v18.yzwy
  mov r6.xyz, v19.xyzx
  mov r7.xyz, v20.xyzx
  mov r8.xyz, v22.xyzx
  mov r4.z, v18.x
  mov r5.w, v4.w
  mov r6.w, v5.w
  mov r7.w, v21.z
  mov r8.w, v22.w
  not r9.x, r3.w
  and r4.y, r4.y, r9.x
  if_nz r4.y
    ieq r7.w, r7.w, l(3)
    if_nz r7.w
      dp3 r7.w, r5.xyzx, r5.xyzx
      rsq r7.w, r7.w
      mul r9.xyz, r5.xyzx, r7.wwww
      dp3 r7.w, r7.xyzx, r7.xyzx
      rsq r7.w, r7.w
      mul r7.xyz, r7.wwww, r7.xyzx
      dp3 r7.x, r9.xyzx, r7.xyzx
      lt r7.y, r6.w, r7.x
      not r7.z, r7.y
      if_nz r7.y
        mov r6.w, -r6.w
        add r7.x, r6.w, r7.x
        add r5.w, r5.w, r6.w
        div r5.w, r7.x, r5.w
      else 
        mov r5.w, l(1.000000)
      endif 
      if_z r7.z
        if_nz v16.z
          div r7.xyw, r8.xyxz, r8.wwww
          lt r6.w, r7.x, l(-1.000000)
          lt r8.w, l(1.000000), r7.x
          or r6.w, r6.w, r8.w
          lt r8.w, r7.y, l(-1.000000)
          or r6.w, r6.w, r8.w
          lt r8.w, l(1.000000), r7.y
          or r6.w, r6.w, r8.w
          lt r8.w, r7.w, l(0.000000)
          or r6.w, r6.w, r8.w
          lt r8.w, l(3.000000), r7.w
          or r6.w, r6.w, r8.w
          not r8.w, r6.w
          not r8.w, r8.w
          if_z r6.w
            mov r9.xy, -r1.xyxx
            add r9.xy, r0.yzyy, r9.xyxx
            mul r9.x, r9.x, l(0.200000)
            mov r9.x, -r9.x
            add r7.x, r7.x, r9.x
            mul r9.x, r9.y, l(0.200000)
            mov r9.x, -r9.x
            add r7.y, r7.y, r9.x
            mul r7.x, r7.x, l(0.500000)
            add r9.x, r7.x, l(0.500000)
            mul r7.x, r7.y, l(-0.500000)
            add r9.y, r7.x, l(0.500000)
            if_nz v16.w
              mov r7.x, r1.z
              mov r7.y, r1.w
              mov r9.zw, r0.yyyz
              mov r9.zw, r9.zzzw
              dp2 r9.z, r9.zwzz, l(23.140692, 2.665144, 0.000000, 0.000000)
              mul r9.z, r9.z, l(256.000000)
              add r9.z, r9.z, l(0.000000)
              div r9.w, l(123456792.000000), r9.z
              mov r10.x, -r9.w
              max r10.y, r9.w, r10.x
              ge r9.w, r9.w, r10.x
              frc r10.x, r10.y
              mov r10.y, -r10.x
              movc r9.w, r9.w, r10.x, r10.y
              mul r9.z, r9.z, r9.w
              sincos null, r9.z, r9.z
              frc r9.z, r9.z
              mov r9.z, r9.z
              add r9.z, r9.z, l(0.500000)
              mul r7.x, r7.x, r9.z
              div r10.x, l(-1.000000), r7.x
              mul r7.y, r7.y, r9.z
              div r10.y, l(-1.000000), r7.y
              add r9.zw, r9.xxxy, r10.xxxy
              sample_c_lz_indexable(texture2d)(float,float,float,float) r9.z, r9.zwzz, t11.xxxx, s2, r7.w
              mul r9.z, r9.z, l(0.800000)
              add r9.z, r9.z, l(0.000000)
              mov r10.x, l(0)
              div r10.y, l(-1.000000), r7.y
              add r10.xy, r9.xyxx, r10.xyxx
              sample_c_lz_indexable(texture2d)(float,float,float,float) r9.w, r10.xyxx, t11.xxxx, s2, r7.w
              mul r9.w, r9.w, l(0.800000)
              add r9.z, r9.w, r9.z
              mov r10.x, l(0)
              div r10.y, l(-1.000000), r7.y
              add r10.xy, r9.xyxx, r10.xyxx
              sample_c_lz_indexable(texture2d)(float,float,float,float) r9.w, r10.xyxx, t11.xxxx, s2, r7.w
              mul r9.w, r9.w, l(0.800000)
              add r9.z, r9.w, r9.z
              div r10.x, l(1.000000), r7.x
              div r10.y, l(-1.000000), r7.y
              add r10.xy, r9.xyxx, r10.xyxx
              sample_c_lz_indexable(texture2d)(float,float,float,float) r9.w, r10.xyxx, t11.xxxx, s2, r7.w
              mul r9.w, r9.w, l(0.800000)
              add r9.z, r9.w, r9.z
              div r10.x, l(-1.000000), r7.x
              mov r10.y, l(0)
              add r10.xy, r9.xyxx, r10.xyxx
              sample_c_lz_indexable(texture2d)(float,float,float,float) r9.w, r10.xyxx, t11.xxxx, s2, r7.w
              mul r9.w, r9.w, l(0.800000)
              add r9.z, r9.w, r9.z
              add r10.xy, r9.xyxx, l(0.000000, 0.000000, 0.000000, 0.000000)
              sample_c_lz_indexable(texture2d)(float,float,float,float) r9.w, r10.xyxx, t11.xxxx, s2, r7.w
              mul r9.w, r9.w, l(0.800000)
              add r9.z, r9.w, r9.z
              add r9.z, r9.w, r9.z
              div r10.x, l(1.000000), r7.x
              mov r10.y, l(0)
              add r10.xy, r9.xyxx, r10.xyxx
              sample_c_lz_indexable(texture2d)(float,float,float,float) r10.x, r10.xyxx, t11.xxxx, s2, r7.w
              mul r10.x, r10.x, l(0.800000)
              add r9.z, r9.z, r10.x
              div r10.x, l(-1.000000), r7.x
              mov r10.y, l(0)
              add r10.xy, r9.xyxx, r10.xyxx
              sample_c_lz_indexable(texture2d)(float,float,float,float) r10.x, r10.xyxx, t11.xxxx, s2, r7.w
              mul r10.x, r10.x, l(0.800000)
              add r9.z, r9.z, r10.x
              add r9.z, r9.w, r9.z
              add r9.z, r9.w, r9.z
              div r10.x, l(1.000000), r7.x
              mov r10.y, l(0)
              add r10.xy, r9.xyxx, r10.xyxx
              sample_c_lz_indexable(texture2d)(float,float,float,float) r9.w, r10.xyxx, t11.xxxx, s2, r7.w
              mul r9.w, r9.w, l(0.800000)
              add r9.z, r9.w, r9.z
              div r10.x, l(-1.000000), r7.x
              div r10.y, l(1.000000), r7.y
              add r10.xy, r9.xyxx, r10.xyxx
              sample_c_lz_indexable(texture2d)(float,float,float,float) r9.w, r10.xyxx, t11.xxxx, s2, r7.w
              mul r9.w, r9.w, l(0.800000)
              add r9.z, r9.w, r9.z
              mov r10.x, l(0)
              div r10.y, l(1.000000), r7.y
              add r10.xy, r9.xyxx, r10.xyxx
              sample_c_lz_indexable(texture2d)(float,float,float,float) r9.w, r10.xyxx, t11.xxxx, s2, r7.w
              mul r9.w, r9.w, l(0.800000)
              add r9.z, r9.w, r9.z
              mov r10.x, l(0)
              div r10.y, l(1.000000), r7.y
              add r10.xy, r9.xyxx, r10.xyxx
              sample_c_lz_indexable(texture2d)(float,float,float,float) r9.w, r10.xyxx, t11.xxxx, s2, r7.w
              mul r9.w, r9.w, l(0.800000)
              add r9.z, r9.w, r9.z
              div r10.x, l(1.000000), r7.x
              div r10.y, l(1.000000), r7.y
              add r10.xy, r9.xyxx, r10.xyxx
              sample_c_lz_indexable(texture2d)(float,float,float,float) r9.w, r10.xyxx, t11.xxxx, s2, r7.w
              mul r9.w, r9.w, l(0.800000)
              add r9.z, r9.w, r9.z
              if_nz v21.x
                mov r9.w, -r7.w
                max r9.w, r7.w, r9.w
                mul r9.w, r9.w, l(0.100000)
                add r10.x, r9.w, r9.x
                add r10.y, r9.w, r9.y
                div r11.x, l(-1.000000), r7.x
                div r11.y, l(-1.000000), r7.y
                add r10.zw, r10.xxxy, r11.xxxy
                sample_c_lz_indexable(texture2d)(float,float,float,float) r9.w, r10.zwzz, t11.xxxx, s2, r7.w
                mul r9.w, r9.w, l(0.200000)
                add r9.w, r9.w, r9.z
                mov r11.x, l(0)
                div r11.y, l(-1.000000), r7.y
                add r10.zw, r10.xxxy, r11.xxxy
                sample_c_lz_indexable(texture2d)(float,float,float,float) r10.z, r10.zwzz, t11.xxxx, s2, r7.w
                mul r10.z, r10.z, l(0.200000)
                add r9.w, r9.w, r10.z
                mov r11.x, l(0)
                div r11.y, l(-1.000000), r7.y
                add r10.zw, r10.xxxy, r11.xxxy
                sample_c_lz_indexable(texture2d)(float,float,float,float) r10.z, r10.zwzz, t11.xxxx, s2, r7.w
                mul r10.z, r10.z, l(0.200000)
                add r9.w, r9.w, r10.z
                div r11.x, l(1.000000), r7.x
                div r11.y, l(-1.000000), r7.y
                add r10.zw, r10.xxxy, r11.xxxy
                sample_c_lz_indexable(texture2d)(float,float,float,float) r10.z, r10.zwzz, t11.xxxx, s2, r7.w
                mul r10.z, r10.z, l(0.200000)
                add r9.w, r9.w, r10.z
                div r11.x, l(-1.000000), r7.x
                mov r11.y, l(0)
                add r10.zw, r10.xxxy, r11.xxxy
                sample_c_lz_indexable(texture2d)(float,float,float,float) r10.z, r10.zwzz, t11.xxxx, s2, r7.w
                mul r10.z, r10.z, l(0.200000)
                add r9.w, r9.w, r10.z
                add r10.zw, r10.xxxy, l(0.000000, 0.000000, 0.000000, 0.000000)
                sample_c_lz_indexable(texture2d)(float,float,float,float) r10.z, r10.zwzz, t11.xxxx, s2, r7.w
                mul r10.z, r10.z, l(0.200000)
                add r9.w, r9.w, r10.z
                add r9.w, r10.z, r9.w
                div r11.x, l(1.000000), r7.x
                mov r11.y, l(0)
                add r11.xy, r10.xyxx, r11.xyxx
                sample_c_lz_indexable(texture2d)(float,float,float,float) r10.w, r11.xyxx, t11.xxxx, s2, r7.w
                mul r10.w, r10.w, l(0.200000)
                add r9.w, r9.w, r10.w
                div r11.x, l(-1.000000), r7.x
                mov r11.y, l(0)
                add r11.xy, r10.xyxx, r11.xyxx
                sample_c_lz_indexable(texture2d)(float,float,float,float) r10.w, r11.xyxx, t11.xxxx, s2, r7.w
                mul r10.w, r10.w, l(0.200000)
                add r9.w, r9.w, r10.w
                add r9.w, r10.z, r9.w
                add r9.w, r10.z, r9.w
                div r11.x, l(1.000000), r7.x
                mov r11.y, l(0)
                add r10.zw, r10.xxxy, r11.xxxy
                sample_c_lz_indexable(texture2d)(float,float,float,float) r10.z, r10.zwzz, t11.xxxx, s2, r7.w
                mul r10.z, r10.z, l(0.200000)
                add r9.w, r9.w, r10.z
                div r11.x, l(-1.000000), r7.x
                div r11.y, l(1.000000), r7.y
                add r10.zw, r10.xxxy, r11.xxxy
                sample_c_lz_indexable(texture2d)(float,float,float,float) r10.z, r10.zwzz, t11.xxxx, s2, r7.w
                mul r10.z, r10.z, l(0.200000)
                add r9.w, r9.w, r10.z
                mov r11.x, l(0)
                div r11.y, l(1.000000), r7.y
                add r10.zw, r10.xxxy, r11.xxxy
                sample_c_lz_indexable(texture2d)(float,float,float,float) r10.z, r10.zwzz, t11.xxxx, s2, r7.w
                mul r10.z, r10.z, l(0.200000)
                add r9.w, r9.w, r10.z
                mov r11.x, l(0)
                div r11.y, l(1.000000), r7.y
                add r10.zw, r10.xxxy, r11.xxxy
                sample_c_lz_indexable(texture2d)(float,float,float,float) r10.z, r10.zwzz, t11.xxxx, s2, r7.w
                mul r10.z, r10.z, l(0.200000)
                add r9.w, r9.w, r10.z
                div r11.x, l(1.000000), r7.x
                div r11.y, l(1.000000), r7.y
                add r7.xy, r10.xyxx, r11.xyxx
                sample_c_lz_indexable(texture2d)(float,float,float,float) r7.x, r7.xyxx, t11.xxxx, s2, r7.w
                mul r7.x, r7.x, l(0.200000)
                add r9.z, r7.x, r9.w
              endif 
              div r7.x, r9.z, l(4.000000)
            else 
              sample_c_lz_indexable(texture2d)(float,float,float,float) r7.y, r9.xyxx, t11.xxxx, s2, r7.w
              div r7.x, r7.y, l(4.000000)
            endif 
          else 
            mov r7.x, l(1.000000)
          endif 
          or r6.w, r6.w, r8.w
        else 
          sample_c_lz_indexable(texture2d)(float,float,float,float) r7.y, r8.xyxx, t11.xxxx, s2, r8.z
          div r7.x, r7.y, l(4.000000)
          mov r6.w, l(0)
        endif 
      else 
        mov r7.x, l(1.000000)
        mov r6.w, l(-1)
      endif 
      or r6.w, r7.z, r6.w
    else 
      mov r5.w, l(1.000000)
      mov r7.x, l(1.000000)
      mov r6.w, l(0)
    endif 
    if_z r6.w
      dp3 r6.w, r2.xyzx, r2.xyzx
      rsq r6.w, r6.w
      mul r7.yzw, r2.xxyz, r6.wwww
      dp3 r5.x, r5.xyzx, r7.yzwy
      max r5.x, r5.x, l(0.000000)
      min r5.x, r5.x, l(1.000000)
      mul r4.z, r4.z, r5.x
      mul r5.xyz, r6.xyzx, r4.zzzz
      mul r5.xyz, r5.wwww, r5.xyzx
      mul r5.xyz, r7.xxxx, r5.xyzx
      add r3.xyz, r3.xyzx, r5.xyzx
    endif 
    mov r4.z, l(0)
    mov r5.x, l(0)
  else 
    mov r4.z, l(-1)
    mov r5.x, l(-1)
  endif 
  and r5.x, r4.y, r5.x
  or r2.w, r2.w, r5.x
  and r4.y, r4.z, r4.y
  or r3.w, r3.w, r4.y
else 
  mov r2.w, l(-1)
endif 
not r2.w, r2.w
not r4.y, r3.w
and r4.y, r2.w, r4.y
ult r4.z, l(3), v28.x
and r4.y, r4.y, r4.z
if_nz r4.y
  mov r5.xyz, v23.yzwy
  mov r6.xyz, v24.xyzx
  mov r7.xyz, v25.xyzx
  mov r8.xyz, v27.xyzx
  mov r4.y, v23.x
  mov r5.w, v9.w
  mov r6.w, v15.w
  mov r7.w, v26.w
  mov r8.w, v27.w
  not r9.x, r3.w
  and r2.w, r2.w, r9.x
  if_nz r2.w
    ieq r7.w, r7.w, l(3)
    if_nz r7.w
      dp3 r7.w, r5.xyzx, r5.xyzx
      rsq r7.w, r7.w
      mul r9.xyz, r5.xyzx, r7.wwww
      dp3 r7.w, r7.xyzx, r7.xyzx
      rsq r7.w, r7.w
      mul r7.xyz, r7.wwww, r7.xyzx
      dp3 r7.x, r9.xyzx, r7.xyzx
      lt r7.y, r6.w, r7.x
      not r7.z, r7.y
      if_nz r7.y
        mov r6.w, -r6.w
        add r7.x, r6.w, r7.x
        add r5.w, r5.w, r6.w
        div r5.w, r7.x, r5.w
      else 
        mov r5.w, l(1.000000)
      endif 
      if_z r7.z
        if_nz v21.w
          div r7.xyw, r8.xyxz, r8.wwww
          lt r6.w, r7.x, l(-1.000000)
          lt r8.w, l(1.000000), r7.x
          or r6.w, r6.w, r8.w
          lt r8.w, r7.y, l(-1.000000)
          or r6.w, r6.w, r8.w
          lt r8.w, l(1.000000), r7.y
          or r6.w, r6.w, r8.w
          lt r8.w, r7.w, l(0.000000)
          or r6.w, r6.w, r8.w
          lt r8.w, l(3.000000), r7.w
          or r6.w, r6.w, r8.w
          not r8.w, r6.w
          not r8.w, r8.w
          if_z r6.w
            mov r1.xy, -r1.xyxx
            add r1.xy, r0.yzyy, r1.xyxx
            mul r1.x, r1.x, l(0.200000)
            mov r1.x, -r1.x
            add r1.x, r1.x, r7.x
            mul r1.y, r1.y, l(0.200000)
            mov r1.y, -r1.y
            add r1.y, r1.y, r7.y
            mul r1.x, r1.x, l(0.500000)
            add r7.x, r1.x, l(0.500000)
            mul r1.x, r1.y, l(-0.500000)
            add r7.y, r1.x, l(0.500000)
            if_nz v26.x
              mov r1.z, r1.z
              mov r1.w, r1.w
              mov r1.xy, r0.yzyy
              mov r1.xy, r1.xyxx
              dp2 r1.x, r1.xyxx, l(23.140692, 2.665144, 0.000000, 0.000000)
              mul r1.x, r1.x, l(256.000000)
              add r1.x, r1.x, l(0.000000)
              div r1.y, l(123456792.000000), r1.x
              mov r9.x, -r1.y
              max r9.y, r1.y, r9.x
              ge r1.y, r1.y, r9.x
              frc r9.x, r9.y
              mov r9.y, -r9.x
              movc r1.y, r1.y, r9.x, r9.y
              mul r1.x, r1.x, r1.y
              sincos null, r1.x, r1.x
              frc r1.x, r1.x
              mov r1.x, r1.x
              add r1.x, r1.x, l(0.500000)
              mul r1.y, r1.x, r1.z
              div r9.x, l(-1.000000), r1.y
              mul r1.x, r1.x, r1.w
              div r9.y, l(-1.000000), r1.x
              add r1.zw, r7.xxxy, r9.xxxy
              sample_c_lz_indexable(texture2d)(float,float,float,float) r1.z, r1.zwzz, t11.xxxx, s2, r7.w
              mul r1.z, r1.z, l(0.800000)
              add r1.z, r1.z, l(0.000000)
              mov r9.x, l(0)
              div r9.y, l(-1.000000), r1.x
              add r9.xy, r7.xyxx, r9.xyxx
              sample_c_lz_indexable(texture2d)(float,float,float,float) r1.w, r9.xyxx, t11.xxxx, s2, r7.w
              mul r1.w, r1.w, l(0.800000)
              add r1.z, r1.w, r1.z
              mov r9.x, l(0)
              div r9.y, l(-1.000000), r1.x
              add r9.xy, r7.xyxx, r9.xyxx
              sample_c_lz_indexable(texture2d)(float,float,float,float) r1.w, r9.xyxx, t11.xxxx, s2, r7.w
              mul r1.w, r1.w, l(0.800000)
              add r1.z, r1.w, r1.z
              div r9.x, l(1.000000), r1.y
              div r9.y, l(-1.000000), r1.x
              add r9.xy, r7.xyxx, r9.xyxx
              sample_c_lz_indexable(texture2d)(float,float,float,float) r1.w, r9.xyxx, t11.xxxx, s2, r7.w
              mul r1.w, r1.w, l(0.800000)
              add r1.z, r1.w, r1.z
              div r9.x, l(-1.000000), r1.y
              mov r9.y, l(0)
              add r9.xy, r7.xyxx, r9.xyxx
              sample_c_lz_indexable(texture2d)(float,float,float,float) r1.w, r9.xyxx, t11.xxxx, s2, r7.w
              mul r1.w, r1.w, l(0.800000)
              add r1.z, r1.w, r1.z
              add r9.xy, r7.xyxx, l(0.000000, 0.000000, 0.000000, 0.000000)
              sample_c_lz_indexable(texture2d)(float,float,float,float) r1.w, r9.xyxx, t11.xxxx, s2, r7.w
              mul r1.w, r1.w, l(0.800000)
              add r1.z, r1.w, r1.z
              add r1.z, r1.w, r1.z
              div r9.x, l(1.000000), r1.y
              mov r9.y, l(0)
              add r9.xy, r7.xyxx, r9.xyxx
              sample_c_lz_indexable(texture2d)(float,float,float,float) r9.x, r9.xyxx, t11.xxxx, s2, r7.w
              mul r9.x, r9.x, l(0.800000)
              add r1.z, r1.z, r9.x
              div r9.x, l(-1.000000), r1.y
              mov r9.y, l(0)
              add r9.xy, r7.xyxx, r9.xyxx
              sample_c_lz_indexable(texture2d)(float,float,float,float) r9.x, r9.xyxx, t11.xxxx, s2, r7.w
              mul r9.x, r9.x, l(0.800000)
              add r1.z, r1.z, r9.x
              add r1.z, r1.w, r1.z
              add r1.z, r1.w, r1.z
              div r9.x, l(1.000000), r1.y
              mov r9.y, l(0)
              add r9.xy, r7.xyxx, r9.xyxx
              sample_c_lz_indexable(texture2d)(float,float,float,float) r1.w, r9.xyxx, t11.xxxx, s2, r7.w
              mul r1.w, r1.w, l(0.800000)
              add r1.z, r1.w, r1.z
              div r9.x, l(-1.000000), r1.y
              div r9.y, l(1.000000), r1.x
              add r9.xy, r7.xyxx, r9.xyxx
              sample_c_lz_indexable(texture2d)(float,float,float,float) r1.w, r9.xyxx, t11.xxxx, s2, r7.w
              mul r1.w, r1.w, l(0.800000)
              add r1.z, r1.w, r1.z
              mov r9.x, l(0)
              div r9.y, l(1.000000), r1.x
              add r9.xy, r7.xyxx, r9.xyxx
              sample_c_lz_indexable(texture2d)(float,float,float,float) r1.w, r9.xyxx, t11.xxxx, s2, r7.w
              mul r1.w, r1.w, l(0.800000)
              add r1.z, r1.w, r1.z
              mov r9.x, l(0)
              div r9.y, l(1.000000), r1.x
              add r9.xy, r7.xyxx, r9.xyxx
              sample_c_lz_indexable(texture2d)(float,float,float,float) r1.w, r9.xyxx, t11.xxxx, s2, r7.w
              mul r1.w, r1.w, l(0.800000)
              add r1.z, r1.w, r1.z
              div r9.x, l(1.000000), r1.y
              div r9.y, l(1.000000), r1.x
              add r9.xy, r7.xyxx, r9.xyxx
              sample_c_lz_indexable(texture2d)(float,float,float,float) r1.w, r9.xyxx, t11.xxxx, s2, r7.w
              mul r1.w, r1.w, l(0.800000)
              add r1.z, r1.w, r1.z
              if_nz v26.y
                mov r1.w, -r7.w
                max r1.w, r1.w, r7.w
                mul r1.w, r1.w, l(0.100000)
                add r9.x, r1.w, r7.x
                add r9.y, r1.w, r7.y
                div r10.x, l(-1.000000), r1.y
                div r10.y, l(-1.000000), r1.x
                add r9.zw, r9.xxxy, r10.xxxy
                sample_c_lz_indexable(texture2d)(float,float,float,float) r1.w, r9.zwzz, t11.xxxx, s2, r7.w
                mul r1.w, r1.w, l(0.200000)
                add r1.w, r1.w, r1.z
                mov r10.x, l(0)
                div r10.y, l(-1.000000), r1.x
                add r9.zw, r9.xxxy, r10.xxxy
                sample_c_lz_indexable(texture2d)(float,float,float,float) r9.z, r9.zwzz, t11.xxxx, s2, r7.w
                mul r9.z, r9.z, l(0.200000)
                add r1.w, r1.w, r9.z
                mov r10.x, l(0)
                div r10.y, l(-1.000000), r1.x
                add r9.zw, r9.xxxy, r10.xxxy
                sample_c_lz_indexable(texture2d)(float,float,float,float) r9.z, r9.zwzz, t11.xxxx, s2, r7.w
                mul r9.z, r9.z, l(0.200000)
                add r1.w, r1.w, r9.z
                div r10.x, l(1.000000), r1.y
                div r10.y, l(-1.000000), r1.x
                add r9.zw, r9.xxxy, r10.xxxy
                sample_c_lz_indexable(texture2d)(float,float,float,float) r9.z, r9.zwzz, t11.xxxx, s2, r7.w
                mul r9.z, r9.z, l(0.200000)
                add r1.w, r1.w, r9.z
                div r10.x, l(-1.000000), r1.y
                mov r10.y, l(0)
                add r9.zw, r9.xxxy, r10.xxxy
                sample_c_lz_indexable(texture2d)(float,float,float,float) r9.z, r9.zwzz, t11.xxxx, s2, r7.w
                mul r9.z, r9.z, l(0.200000)
                add r1.w, r1.w, r9.z
                add r9.zw, r9.xxxy, l(0.000000, 0.000000, 0.000000, 0.000000)
                sample_c_lz_indexable(texture2d)(float,float,float,float) r9.z, r9.zwzz, t11.xxxx, s2, r7.w
                mul r9.z, r9.z, l(0.200000)
                add r1.w, r1.w, r9.z
                add r1.w, r9.z, r1.w
                div r10.x, l(1.000000), r1.y
                mov r10.y, l(0)
                add r10.xy, r9.xyxx, r10.xyxx
                sample_c_lz_indexable(texture2d)(float,float,float,float) r9.w, r10.xyxx, t11.xxxx, s2, r7.w
                mul r9.w, r9.w, l(0.200000)
                add r1.w, r1.w, r9.w
                div r10.x, l(-1.000000), r1.y
                mov r10.y, l(0)
                add r10.xy, r9.xyxx, r10.xyxx
                sample_c_lz_indexable(texture2d)(float,float,float,float) r9.w, r10.xyxx, t11.xxxx, s2, r7.w
                mul r9.w, r9.w, l(0.200000)
                add r1.w, r1.w, r9.w
                add r1.w, r9.z, r1.w
                add r1.w, r9.z, r1.w
                div r10.x, l(1.000000), r1.y
                mov r10.y, l(0)
                add r9.zw, r9.xxxy, r10.xxxy
                sample_c_lz_indexable(texture2d)(float,float,float,float) r9.z, r9.zwzz, t11.xxxx, s2, r7.w
                mul r9.z, r9.z, l(0.200000)
                add r1.w, r1.w, r9.z
                div r10.x, l(-1.000000), r1.y
                div r10.y, l(1.000000), r1.x
                add r9.zw, r9.xxxy, r10.xxxy
                sample_c_lz_indexable(texture2d)(float,float,float,float) r9.z, r9.zwzz, t11.xxxx, s2, r7.w
                mul r9.z, r9.z, l(0.200000)
                add r1.w, r1.w, r9.z
                mov r10.x, l(0)
                div r10.y, l(1.000000), r1.x
                add r9.zw, r9.xxxy, r10.xxxy
                sample_c_lz_indexable(texture2d)(float,float,float,float) r9.z, r9.zwzz, t11.xxxx, s2, r7.w
                mul r9.z, r9.z, l(0.200000)
                add r1.w, r1.w, r9.z
                mov r10.x, l(0)
                div r10.y, l(1.000000), r1.x
                add r9.zw, r9.xxxy, r10.xxxy
                sample_c_lz_indexable(texture2d)(float,float,float,float) r9.z, r9.zwzz, t11.xxxx, s2, r7.w
                mul r9.z, r9.z, l(0.200000)
                add r1.w, r1.w, r9.z
                div r10.x, l(1.000000), r1.y
                div r10.y, l(1.000000), r1.x
                add r1.xy, r9.xyxx, r10.xyxx
                sample_c_lz_indexable(texture2d)(float,float,float,float) r1.x, r1.xyxx, t11.xxxx, s2, r7.w
                mul r1.x, r1.x, l(0.200000)
                add r1.z, r1.x, r1.w
              endif 
              div r1.x, r1.z, l(4.000000)
            else 
              sample_c_lz_indexable(texture2d)(float,float,float,float) r1.y, r7.xyxx, t11.xxxx, s2, r7.w
              div r1.x, r1.y, l(4.000000)
            endif 
          else 
            mov r1.x, l(1.000000)
          endif 
          or r1.y, r6.w, r8.w
        else 
          sample_c_lz_indexable(texture2d)(float,float,float,float) r1.z, r8.xyxx, t11.xxxx, s2, r8.z
          div r1.x, r1.z, l(4.000000)
          mov r1.y, l(0)
        endif 
      else 
        mov r1.x, l(1.000000)
        mov r1.y, l(-1)
      endif 
      or r1.y, r7.z, r1.y
    else 
      mov r5.w, l(1.000000)
      mov r1.x, l(1.000000)
      mov r1.y, l(0)
    endif 
    if_z r1.y
      dp3 r1.y, r2.xyzx, r2.xyzx
      rsq r1.y, r1.y
      mul r1.yzw, r1.yyyy, r2.xxyz
      dp3 r1.y, r5.xyzx, r1.yzwy
      max r1.y, r1.y, l(0.000000)
      min r1.y, r1.y, l(1.000000)
      mul r1.y, r4.y, r1.y
      mul r1.yzw, r6.xxyz, r1.yyyy
      mul r1.yzw, r5.wwww, r1.yyzw
      mul r1.xyz, r1.xxxx, r1.yzwy
      add r3.xyz, r1.xyzx, r3.xyzx
    endif 
    mov r1.x, l(0)
  else 
    mov r1.x, l(-1)
  endif 
  and r1.x, r1.x, r2.w
  or r3.w, r3.w, r1.x
endif 
retc_nz r3.w
sample_indexable(texture2d)(float,float,float,float) r1.xyzw, r0.yzyy, t12.wxyz, s0
mov r5.xyz, -v6.xyzx
sample_indexable(texture2d)(float,float,float,float) r6.xyz, r0.yzyy, t14.xyzw, s0
add r5.xyz, r5.xyzx, v5.xyzx
sample_indexable(texture2d)(float,float,float,float) r7.xyz, r0.yzyy, t13.xyzw, s0
dp3 r2.w, r5.xyzx, r5.xyzx
rsq r3.w, r2.w
mul r5.xyz, r3.wwww, r5.xyzx
dp3 r3.w, r5.xyzx, r2.xyzx
add r4.y, r3.w, r3.w
mov r4.y, -r4.y
mul r8.xy, r2.xyxx, r4.yyyy
add r8.xy, r5.xyxx, r8.xyxx
mul r4.y, r3.w, r3.w
mov r4.y, -r4.y
add r4.y, r4.y, l(1.000000)
mul r4.y, r4.y, l(0.980100)
mov r4.y, -r4.y
add r4.y, r4.y, l(1.000000)
sqrt r5.w, r4.y
mul r6.w, r3.w, l(0.990000)
add r5.w, r5.w, r6.w
ge r4.y, r4.y, l(0.000000)
mul r8.zw, r5.xxxy, l(0.000000, 0.000000, 0.990000, 0.990000)
mul r9.xy, r2.xyxx, r5.wwww
mov r9.xy, -r9.xyxx
add r8.zw, r8.zzzw, r9.xxxy
movc r8.zw, r4.yyyy, r8.zzzw, l(0,0,0,0)
sample_indexable(texture2d)(float,float,float,float) r9.xyz, r8.zwzz, t16.xyzw, s0
sample_indexable(texture2d)(float,float,float,float) r8.xyz, r8.xyxx, t16.xyzw, s0
sample_indexable(texture2d)(float,float,float,float) r10.xyz, r0.yzyy, t18.xyzw, s0
mov r11.xyz, v7.yzwy
mov r11.xyz, r11.xyzx
mov r12.xyz, v13.yzwy
mov r2.xyz, r2.xyzx
mov r13.xyz, v5.xyzx
mov r14.xyz, v6.xyzx
mov r15.xyz, r11.xyzx
mov r16.xyz, r2.xyzx
mov r14.xyz, -r14.xyzx
add r13.xyz, r13.xyzx, r14.xyzx
dp3 r4.y, r13.xyzx, r13.xyzx
rsq r4.y, r4.y
mul r13.xyz, r4.yyyy, r13.xyzx
dp3 r4.y, r15.xyzx, r15.xyzx
rsq r4.y, r4.y
mul r14.xyz, r4.yyyy, r15.xyzx
add r15.xyz, r13.xyzx, r14.xyzx
dp3 r4.y, r15.xyzx, r15.xyzx
rsq r4.y, r4.y
mul r15.xyz, r4.yyyy, r15.xyzx
dp3 r4.y, r15.xyzx, r14.xyzx
div r4.y, r4.y, l(2.000000)
add r17.x, r4.y, l(0.500000)
dp3 r4.y, r16.xyzx, r15.xyzx
div r4.y, r4.y, l(2.000000)
add r4.y, r4.y, l(0.500000)
mov r4.y, -r4.y
add r17.y, r4.y, l(1.000000)
dp3 r4.y, r14.xyzx, r16.xyzx
div r4.y, r4.y, l(2.000000)
add r14.x, r4.y, l(0.500000)
dp3 r4.y, r16.xyzx, r13.xyzx
div r4.y, r4.y, l(2.000000)
add r4.y, r4.y, l(0.500000)
mov r4.y, -r4.y
add r14.y, r4.y, l(1.000000)
sample_indexable(texture2d)(float,float,float,float) r15.xyz, r17.xyxx, t17.xyzw, s0
sample_indexable(texture2d)(float,float,float,float) r14.xyz, r14.xyxx, t15.xyzw, s0
mov r12.xyz, r12.xyzx
mov r17.xyz, v18.yzwy
mov r18.xyz, r12.xyzx
dp3 r5.w, r18.xyzx, r18.xyzx
rsq r5.w, r5.w
mul r18.xyz, r5.wwww, r18.xyzx
add r19.xyz, r13.xyzx, r18.xyzx
dp3 r5.w, r19.xyzx, r19.xyzx
rsq r5.w, r5.w
mul r19.xyz, r5.wwww, r19.xyzx
dp3 r5.w, r19.xyzx, r18.xyzx
div r5.w, r5.w, l(2.000000)
add r20.x, r5.w, l(0.500000)
dp3 r5.w, r16.xyzx, r19.xyzx
div r5.w, r5.w, l(2.000000)
add r5.w, r5.w, l(0.500000)
mov r5.w, -r5.w
add r20.y, r5.w, l(1.000000)
dp3 r5.w, r18.xyzx, r16.xyzx
div r5.w, r5.w, l(2.000000)
add r18.x, r5.w, l(0.500000)
add r18.y, r4.y, l(1.000000)
sample_indexable(texture2d)(float,float,float,float) r19.xyz, r20.xyxx, t17.xyzw, s0
sample_indexable(texture2d)(float,float,float,float) r18.xyz, r18.xyxx, t15.xyzw, s0
mov r17.xyz, r17.xyzx
mov r20.xyz, v23.yzwy
mov r21.xyz, r17.xyzx
dp3 r5.w, r21.xyzx, r21.xyzx
rsq r5.w, r5.w
mul r21.xyz, r5.wwww, r21.xyzx
add r22.xyz, r13.xyzx, r21.xyzx
dp3 r5.w, r22.xyzx, r22.xyzx
rsq r5.w, r5.w
mul r22.xyz, r5.wwww, r22.xyzx
dp3 r5.w, r22.xyzx, r21.xyzx
div r5.w, r5.w, l(2.000000)
add r23.x, r5.w, l(0.500000)
dp3 r5.w, r16.xyzx, r22.xyzx
div r5.w, r5.w, l(2.000000)
add r5.w, r5.w, l(0.500000)
mov r5.w, -r5.w
add r23.y, r5.w, l(1.000000)
dp3 r5.w, r21.xyzx, r16.xyzx
div r5.w, r5.w, l(2.000000)
add r21.x, r5.w, l(0.500000)
add r21.y, r4.y, l(1.000000)
sample_indexable(texture2d)(float,float,float,float) r22.xyz, r23.xyxx, t17.xyzw, s0
sample_indexable(texture2d)(float,float,float,float) r21.xyz, r21.xyxx, t15.xyzw, s0
mov r20.xyz, r20.xyzx
mov r23.xyz, r20.xyzx
dp3 r5.w, r23.xyzx, r23.xyzx
rsq r5.w, r5.w
mul r23.xyz, r5.wwww, r23.xyzx
add r13.xyz, r13.xyzx, r23.xyzx
dp3 r5.w, r13.xyzx, r13.xyzx
rsq r5.w, r5.w
mul r13.xyz, r5.wwww, r13.xyzx
dp3 r5.w, r13.xyzx, r23.xyzx
div r5.w, r5.w, l(2.000000)
add r24.x, r5.w, l(0.500000)
dp3 r5.w, r16.xyzx, r13.xyzx
div r5.w, r5.w, l(2.000000)
add r5.w, r5.w, l(0.500000)
mov r5.w, -r5.w
add r24.y, r5.w, l(1.000000)
dp3 r5.w, r23.xyzx, r16.xyzx
div r5.w, r5.w, l(2.000000)
add r13.x, r5.w, l(0.500000)
add r13.y, r4.y, l(1.000000)
sample_indexable(texture2d)(float,float,float,float) r23.xyz, r24.xyxx, t17.xyzw, s0
sample_indexable(texture2d)(float,float,float,float) r13.xyz, r13.xyxx, t15.xyzw, s0
mul r3.xyz, r3.xyzx, cb1[1].yyyy
max r3.xyz, r3.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
min r3.xyz, r3.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
ine r4.y, l(0, 0, 0, 0), cb1[6].x
if_nz r4.y
  if_nz v28.x
    dp3 r4.y, v7.yzwy, v7.yzwy
    rsq r4.y, r4.y
    mul r24.xyz, r4.yyyy, v7.yzwy
    add r24.xyz, r5.xyzx, r24.xyzx
    dp3 r4.y, r24.xyzx, r24.xyzx
    rsq r4.y, r4.y
    mul r24.xyz, r4.yyyy, r24.xyzx
    dp3 r4.y, r2.xyzx, r2.xyzx
    rsq r4.y, r4.y
    mul r25.xyz, r2.xyzx, r4.yyyy
    dp3 r4.y, r25.xyzx, r24.xyzx
    max r4.y, r4.y, l(0.000000)
    min r4.y, r4.y, l(1.000000)
    log r4.y, r4.y
    mul r4.y, r4.y, cb1[1].x
    exp r4.y, r4.y
    add r4.y, r4.y, l(0.000000)
  else 
    mov r4.y, l(0)
  endif 
  if_nz r4.x
    dp3 r5.w, v13.yzwy, v13.yzwy
    rsq r5.w, r5.w
    mul r24.xyz, r5.wwww, v13.yzwy
    add r24.xyz, r5.xyzx, r24.xyzx
    dp3 r5.w, r24.xyzx, r24.xyzx
    rsq r5.w, r5.w
    mul r24.xyz, r5.wwww, r24.xyzx
    dp3 r5.w, r2.xyzx, r2.xyzx
    rsq r5.w, r5.w
    mul r25.xyz, r2.xyzx, r5.wwww
    dp3 r5.w, r25.xyzx, r24.xyzx
    max r5.w, r5.w, l(0.000000)
    min r5.w, r5.w, l(1.000000)
    log r5.w, r5.w
    mul r5.w, r5.w, cb1[1].x
    exp r5.w, r5.w
    add r4.y, r4.y, r5.w
  endif 
  if_nz r4.w
    dp3 r5.w, v18.yzwy, v18.yzwy
    rsq r5.w, r5.w
    mul r24.xyz, r5.wwww, v18.yzwy
    add r24.xyz, r5.xyzx, r24.xyzx
    dp3 r5.w, r24.xyzx, r24.xyzx
    rsq r5.w, r5.w
    mul r24.xyz, r5.wwww, r24.xyzx
    dp3 r5.w, r2.xyzx, r2.xyzx
    rsq r5.w, r5.w
    mul r25.xyz, r2.xyzx, r5.wwww
    dp3 r5.w, r25.xyzx, r24.xyzx
    max r5.w, r5.w, l(0.000000)
    min r5.w, r5.w, l(1.000000)
    log r5.w, r5.w
    mul r5.w, r5.w, cb1[1].x
    exp r5.w, r5.w
    add r4.y, r4.y, r5.w
  endif 
  if_nz r4.z
    dp3 r5.w, v23.yzwy, v23.yzwy
    rsq r5.w, r5.w
    mul r24.xyz, r5.wwww, v23.yzwy
    add r24.xyz, r5.xyzx, r24.xyzx
    dp3 r5.w, r24.xyzx, r24.xyzx
    rsq r5.w, r5.w
    mul r24.xyz, r5.wwww, r24.xyzx
    dp3 r5.w, r2.xyzx, r2.xyzx
    rsq r5.w, r5.w
    mul r2.xyz, r2.xyzx, r5.wwww
    dp3 r2.x, r2.xyzx, r24.xyzx
    max r2.x, r2.x, l(0.000000)
    min r2.x, r2.x, l(1.000000)
    log r2.x, r2.x
    mul r2.x, r2.x, cb1[1].x
    exp r2.x, r2.x
    add r4.y, r2.x, r4.y
  endif 
  ine r2.x, l(0, 0, 0, 0), cb1[14].x
  if_nz r2.x
    mul r2.xyz, r3.xyzx, r4.yyyy
    mul r2.xyz, r2.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000)
  else 
    ine r5.w, l(0, 0, 0, 0), cb1[10].x
    if_nz r5.w
      mul r24.xyz, r1.yzwy, l(2.000000, 2.000000, 2.000000, 0.000000)
      mul r25.xyz, r3.xyzx, r4.yyyy
      mul r2.xyz, r24.xyzx, r25.xyzx
    else 
      mul r6.xyz, r6.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000)
      mul r24.xyz, r3.xyzx, r4.yyyy
      mul r2.xyz, r6.xyzx, r24.xyzx
    endif 
  endif 
else 
  mov r2.xyz, l(0,0,0,0)
endif 
ine r4.y, l(0, 0, 0, 0), cb1[4].x
if_nz r4.y
  mov r6.xyz, r1.yzwy
else 
  ine r5.w, l(0, 0, 0, 0), cb1[8].x
  if_nz r5.w
    mov r6.xyz, l(0,0,0,0)
    mov r1.x, l(0)
  else 
    mov r6.xyz, l(1.000000,1.000000,1.000000,0)
    mov r1.x, l(1.000000)
  endif 
endif 
ine r5.w, l(0, 0, 0, 0), cb1[18].x
if_nz r5.w
  resinfo_indexable(texture2d)(float,float,float,float)_uint r24.xy, l(0), t12.xyzw
  utof r5.w, r24.x
  mul r25.x, r0.y, r5.w
  utof r0.y, r24.y
  mul r25.y, r0.y, r0.z
  ld_indexable(texture2d)(float,float,float,float) r24.xyz, l(0, 0, 0, 0), t12.xyzw
  add r0.yz, r25.xxyx, l(0.000000, -0.500000, -0.500000, 0.000000)
  add r25.zw, r25.xxxy, l(0.000000, 0.000000, 0.500000, -0.500000)
  add r26.xy, r25.xyxx, l(-0.500000, 0.500000, 0.000000, 0.000000)
  add r25.xy, r25.xyxx, l(0.500000, 0.500000, 0.000000, 0.000000)
  ftoi r27.xy, r0.yzyy
  mov r27.zw, l(0,0,0,0)
  ld_indexable(texture2d)(float,float,float,float) r27.xyzw, r27.xyzw, t12.xyzw
  ftoi r28.xy, r25.zwzz
  mov r28.zw, l(0,0,0,0)
  ld_indexable(texture2d)(float,float,float,float) r28.xyzw, r28.xyzw, t12.xyzw
  ftoi r26.xy, r26.xyxx
  mov r26.zw, l(0,0,0,0)
  ld_indexable(texture2d)(float,float,float,float) r26.xyzw, r26.xyzw, t12.xyzw
  ftoi r25.xy, r25.xyxx
  mov r25.zw, l(0,0,0,0)
  ld_indexable(texture2d)(float,float,float,float) r25.xyzw, r25.xyzw, t12.xyzw
  eq r5.w, r27.x, r24.x
  eq r6.w, r27.y, r24.y
  and r5.w, r5.w, r6.w
  eq r6.w, r27.z, r24.z
  and r5.w, r5.w, r6.w
  if_nz r5.w
    mov r27.x, l(0)
    mov r27.y, l(0)
    mov r27.z, l(0)
    mov r27.w, l(0)
  endif 
  eq r5.w, r28.x, r24.x
  eq r6.w, r28.y, r24.y
  and r5.w, r5.w, r6.w
  eq r6.w, r28.z, r24.z
  and r5.w, r5.w, r6.w
  if_nz r5.w
    mov r28.xyzw, l(0,0,0,0)
  endif 
  eq r5.w, r26.x, r24.x
  eq r6.w, r26.y, r24.y
  and r5.w, r5.w, r6.w
  eq r6.w, r26.z, r24.z
  and r5.w, r5.w, r6.w
  if_nz r5.w
    mov r26.x, l(0)
    mov r26.y, l(0)
    mov r26.z, l(0)
    mov r26.w, l(0)
  endif 
  eq r5.w, r25.x, r24.x
  eq r6.w, r25.y, r24.y
  and r5.w, r5.w, r6.w
  eq r6.w, r25.z, r24.z
  and r5.w, r5.w, r6.w
  if_nz r5.w
    mov r25.xyzw, l(0,0,0,0)
  endif 
  frc r0.y, r0.y
  frc r0.z, r0.z
  mov r5.w, -r27.w
  add r5.w, r5.w, r28.w
  mul r5.w, r0.y, r5.w
  add r5.w, r27.w, r5.w
  mov r6.w, -r26.w
  add r6.w, r6.w, r25.w
  mul r6.w, r0.y, r6.w
  add r6.w, r26.w, r6.w
  mov r7.w, -r5.w
  add r6.w, r6.w, r7.w
  mul r6.w, r0.z, r6.w
  add r1.x, r5.w, r6.w
  mov r5.w, -r27.x
  add r5.w, r5.w, r28.x
  mul r5.w, r0.y, r5.w
  add r5.w, r27.x, r5.w
  mov r6.w, -r27.y
  add r6.w, r6.w, r28.y
  mul r6.w, r0.y, r6.w
  add r6.w, r27.y, r6.w
  mov r7.w, -r27.z
  add r7.w, r7.w, r28.z
  mul r7.w, r0.y, r7.w
  add r7.w, r27.z, r7.w
  mov r8.w, -r26.x
  add r8.w, r8.w, r25.x
  mul r8.w, r0.y, r8.w
  add r8.w, r26.x, r8.w
  mov r9.w, -r26.y
  add r9.w, r9.w, r25.y
  mul r9.w, r0.y, r9.w
  add r9.w, r26.y, r9.w
  mov r10.w, -r26.z
  add r10.w, r10.w, r25.z
  mul r0.y, r0.y, r10.w
  add r0.y, r26.z, r0.y
  mov r10.w, -r5.w
  add r8.w, r8.w, r10.w
  mul r8.w, r0.z, r8.w
  add r6.x, r5.w, r8.w
  mov r5.w, -r6.w
  add r5.w, r5.w, r9.w
  mul r5.w, r0.z, r5.w
  add r6.y, r6.w, r5.w
  mov r5.w, -r7.w
  add r0.y, r0.y, r5.w
  mul r0.y, r0.z, r0.y
  add r6.z, r7.w, r0.y
  mov r1.x, r1.x
endif 
ine r0.y, l(0, 0, 0, 0), cb1[5].x
if_nz r0.y
  ine r0.y, l(0, 0, 0, 0), cb1[17].x
  if_nz r0.y
    mov r24.xyz, cb1[0].xyzx
  else 
    ine r0.y, l(0, 0, 0, 0), cb1[9].x
    if_nz r0.y
      mov r25.xyz, -r3.xyzx
      add r25.xyz, r25.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
      max r25.xyz, r25.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
      min r25.xyz, r25.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
      mul r24.xyz, r1.yzwy, r25.xyzx
    else 
      mov r25.xyz, -r3.xyzx
      add r25.xyz, r25.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
      max r25.xyz, r25.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
      min r25.xyz, r25.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
      mul r24.xyz, r7.xyzx, r25.xyzx
    endif 
  endif 
else 
  mov r24.xyz, l(0,0,0,0)
endif 
ine r0.y, l(0, 0, 0, 0), cb1[16].x
if_nz r0.y
  mul r6.xyz, r3.xyzx, r6.xyzx
endif 
add r6.xyz, r6.xyzx, cb1[0].xyzx
add r6.xyz, r24.xyzx, r6.xyzx
add r6.xyz, r2.xyzx, r6.xyzx
ine r0.y, l(0, 0, 0, 0), cb1[19].x
if_nz r0.y
  mov r7.xyz, -r9.xyzx
  add r7.xyz, r7.xyzx, r8.xyzx
  mul r7.xyz, r7.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
  add r7.xyz, r7.xyzx, r9.xyzx
  div r7.xyz, r7.xyzx, cb1[2].wwww
  dp3 r0.y, r6.xyzx, r6.xyzx
  sqrt r0.y, r0.y
  mul r7.xyz, r0.yyyy, r7.xyzx
  add r6.xyz, r6.xyzx, r7.xyzx
endif 
if_nz r4.y
  max r0.y, r1.x, l(0.000000)
  min r0.y, r0.y, l(1.000000)
  mov r0.z, -cb1[1].w
  add r0.z, r0.z, l(1.000000)
  mul r0.y, r0.z, r0.y
  add r6.w, r0.y, cb1[0].w
else 
  mov r6.w, cb1[0].w
endif 
ine r0.y, l(0, 0, 0, 0), cb1[22].x
if_nz r0.y
  mov r0.y, cb1[3].x
  mov r0.z, cb1[3].z
  mov r1.x, cb1[2].x
  mov r4.y, cb1[2].y
  mov r5.w, cb1[2].z
  mov r2.xyz, r2.xyzx
  mov r1.yzw, r1.yyzw
  dp3 r7.x, r10.xyzx, r10.xyzx
  sqrt r7.x, r7.x
  mov r7.y, l(0)
  mov r8.xyz, r6.xyzx
  mov r8.w, r6.w
  mov r7.z, r7.y
  loop 
    ult r7.w, r7.z, v28.x
    breakc_z r7.w
    mov r9.xyzw, v12.xyzw
    mov r10.xyz, v8.xyzx
    mov r10.w, v11.x
    and r10.xyzw, r10.xyzw, icb[r7.z + 0].xxxx
    and r9.xyzw, r9.xyzw, icb[r7.z + 0].xxxx
    and r24.xyz, r11.xyzx, icb[r7.z + 0].xxxx
    iadd r10.xyzw, r10.xyzw, l(0, 0, 0, 0)
    iadd r9.xyzw, r9.xyzw, l(0, 0, 0, 0)
    iadd r24.xyz, r24.xyzx, l(0, 0, 0, 0)
    mov r25.xyzw, v17.xyzw
    mov r26.xyz, v14.xyzx
    mov r26.w, v16.y
    and r26.xyzw, r26.xyzw, icb[r7.z + 0].yyyy
    and r25.xyzw, r25.xyzw, icb[r7.z + 0].yyyy
    and r27.xyz, r12.xyzx, icb[r7.z + 0].yyyy
    or r10.xyzw, r10.xyzw, r26.xyzw
    or r9.xyzw, r9.xyzw, r25.xyzw
    or r24.xyz, r24.xyzx, r27.xyzx
    mov r25.xyzw, v22.xyzw
    mov r26.xyz, v19.xyzx
    mov r26.w, v21.z
    and r26.xyzw, r26.xyzw, icb[r7.z + 0].zzzz
    and r25.xyzw, r25.xyzw, icb[r7.z + 0].zzzz
    and r27.xyz, r17.xyzx, icb[r7.z + 0].zzzz
    or r10.xyzw, r10.xyzw, r26.xyzw
    or r9.xyzw, r9.xyzw, r25.xyzw
    or r24.xyz, r24.xyzx, r27.xyzx
    mov r25.xyzw, v27.xyzw
    mov r26.xyz, v24.xyzx
    mov r26.w, v26.w
    and r26.xyzw, r26.xyzw, icb[r7.z + 0].wwww
    and r25.xyzw, r25.xyzw, icb[r7.z + 0].wwww
    and r27.xyz, r20.xyzx, icb[r7.z + 0].wwww
    or r10.xyzw, r10.xyzw, r26.xyzw
    or r9.xyzw, r9.xyzw, r25.xyzw
    or r24.xyz, r24.xyzx, r27.xyzx
    dp3 r7.w, r24.xyzx, r24.xyzx
    rsq r7.w, r7.w
    mul r24.xyz, r7.wwww, r24.xyzx
    mov r9.xyzw, r9.xyzw
    mov r10.xyz, r10.xyzx
    mov r25.xyzw, -v6.xyzw
    add r9.xyzw, r9.xyzw, r25.xyzw
    dp4 r7.w, r9.xyzw, r9.xyzw
    sqrt r7.w, r7.w
    div r7.w, l(1.000000), r7.w
    mul r7.w, r7.w, l(10.000000)
    lt r9.x, r7.w, l(1.000000)
    if_nz r9.x
      mov r7.w, l(1.000000)
    endif 
    mov r24.xyz, r24.xyzx
    dp3 r9.x, r24.xyzx, r16.xyzx
    mul r9.x, r9.x, l(0.500000)
    add r9.x, r9.x, l(0.500000)
    mov r9.x, r9.x
    mul r9.xyz, r7.wwww, r9.xxxx
    mov r25.xyz, -r16.xyzx
    dp3 r9.w, r25.xyzx, r24.xyzx
    max r9.w, r9.w, l(0.000000)
    mul r25.xyz, r0.yyyy, r9.wwww
    mov r26.xyz, -r5.xyzx
    dp3 r9.w, r26.xyzx, r24.xyzx
    mul r9.w, r9.w, l(0.500000)
    add r9.w, r9.w, l(0.500000)
    mov r9.w, r9.w
    mul r9.w, r0.y, r9.w
    add r25.xyz, r9.wwww, r25.xyzx
    mul r25.xyz, r7.wwww, r25.xyzx
    mul r26.x, r1.x, r25.x
    mul r26.y, r4.y, r25.y
    mul r26.z, r5.w, r25.z
    mul r25.xyz, r7.xxxx, r26.xyzx
    dp3 r9.w, r16.xyzx, r5.xyzx
    max r9.w, r9.w, l(0.000000)
    mov r9.w, -r9.w
    add r26.xyz, r9.wwww, l(1.000000, 1.000000, 1.000000, 0.000000)
    mul r26.xyz, r26.xyzx, r26.xyzx
    dp3 r9.w, r16.xyzx, r24.xyzx
    max r9.w, r9.w, l(0.000000)
    mul r27.xyz, r2.xyzx, r9.wwww
    mul r26.xyz, r26.xyzx, r27.xyzx
    mul r9.xyz, r1.yzwy, r9.xyzx
    add r9.xyz, r25.xyzx, r9.xyzx
    mov r25.w, l(1.000000)
    mul r26.xyz, r0.zzzz, r26.xyzx
    mul r26.xyz, r7.wwww, r26.xyzx
    mul r26.xyz, r26.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
    add r9.xyz, r9.xyzx, r26.xyzx
    add r24.xyz, r16.xyzx, r24.xyzx
    dp3 r9.w, r24.xyzx, r24.xyzx
    rsq r9.w, r9.w
    mul r24.xyz, r9.wwww, r24.xyzx
    dp3 r9.w, r16.xyzx, r24.xyzx
    max r9.w, r9.w, l(0.000000)
    min r9.w, r9.w, l(1.000000)
    mul r9.w, r9.w, l(1.000000)
    mul r7.w, r7.w, r9.w
    mul r24.xyz, r2.xyzx, r7.wwww
    mul r24.xyz, r24.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
    mul r24.xyz, r24.xyzx, l(0.050000, 0.050000, 0.050000, 0.000000)
    add r9.xyz, r9.xyzx, r24.xyzx
    mul r25.xyz, r10.xyzx, r9.xyzx
    ieq r7.w, r10.w, l(3)
    if_nz r7.w
      mul r8.xyzw, r25.xyzw, r8.xyzw
    endif 
    iadd r7.z, r7.z, l(1)
  endloop 
  mov r6.xyz, r8.xyzx
  mov r6.w, r8.w
endif 
ine r0.y, l(0, 0, 0, 0), cb1[21].x
and r0.y, r0.w, r0.y
and r0.x, r0.x, r0.y
if_nz r0.x
  if_nz v28.x
    mov r0.x, v28.x
    mov r0.yzw, v8.xxyz
    mov r0.yzw, r0.yyzw
    lt r1.x, l(0.010000), r0.y
    if_nz r1.x
      mov r0.y, r0.y
      mov r0.zw, r0.zzzw
      mov r1.xyz, cb1[0].xyzx
      mov r2.xyz, r3.xyzx
      mul r0.yzw, r0.yyzw, r14.xxyz
      mul r0.yzw, r1.xxyz, r0.yyzw
      add r0.yzw, r0.yyzw, r15.xxyz
      add r0.yzw, r0.yyzw, r2.xxyz
      utof r0.x, r0.x
      div r1.x, l(20.000000), cb1[3].y
      mul r0.x, r0.x, r1.x
      div r0.xyz, r0.yzwy, r0.xxxx
      add r6.xyz, r0.xyzx, r6.xyzx
    endif 
  endif 
  if_nz r4.x
    mov r0.x, v28.x
    mov r0.yzw, v14.xxyz
    mov r0.yzw, r0.yyzw
    lt r1.x, l(0.010000), r0.y
    if_nz r1.x
      mov r0.y, r0.y
      mov r0.zw, r0.zzzw
      mov r1.xyz, cb1[0].xyzx
      mov r2.xyz, r3.xyzx
      mul r0.yzw, r0.yyzw, r18.xxyz
      mul r0.yzw, r1.xxyz, r0.yyzw
      add r0.yzw, r0.yyzw, r19.xxyz
      add r0.yzw, r0.yyzw, r2.xxyz
      utof r0.x, r0.x
      div r1.x, l(20.000000), cb1[3].y
      mul r0.x, r0.x, r1.x
      div r0.xyz, r0.yzwy, r0.xxxx
      add r6.xyz, r0.xyzx, r6.xyzx
    endif 
  endif 
  if_nz r4.w
    mov r0.x, v28.x
    mov r0.yzw, v19.xxyz
    mov r0.yzw, r0.yyzw
    lt r1.x, l(0.010000), r0.y
    if_nz r1.x
      mov r0.y, r0.y
      mov r0.zw, r0.zzzw
      mov r1.xyz, cb1[0].xyzx
      mov r2.xyz, r3.xyzx
      mul r0.yzw, r0.yyzw, r21.xxyz
      mul r0.yzw, r1.xxyz, r0.yyzw
      add r0.yzw, r0.yyzw, r22.xxyz
      add r0.yzw, r0.yyzw, r2.xxyz
      utof r0.x, r0.x
      div r1.x, l(20.000000), cb1[3].y
      mul r0.x, r0.x, r1.x
      div r0.xyz, r0.yzwy, r0.xxxx
      add r6.xyz, r0.xyzx, r6.xyzx
    endif 
  endif 
  if_nz r4.z
    mov r0.x, v28.x
    mov r0.yzw, v24.xxyz
    mov r0.yzw, r0.yyzw
    lt r1.x, l(0.010000), r0.y
    if_nz r1.x
      mov r0.y, r0.y
      mov r0.zw, r0.zzzw
      mov r1.xyz, cb1[0].xyzx
      mov r3.xyz, r3.xyzx
      mul r0.yzw, r0.yyzw, r13.xxyz
      mul r0.yzw, r1.xxyz, r0.yyzw
      add r0.yzw, r0.yyzw, r23.xxyz
      add r0.yzw, r0.yyzw, r3.xxyz
      utof r0.x, r0.x
      div r1.x, l(20.000000), cb1[3].y
      mul r0.x, r0.x, r1.x
      div r0.xyz, r0.yzwy, r0.xxxx
      add r6.xyz, r0.xyzx, r6.xyzx
    endif 
  endif 
endif 
ine r0.x, l(0, 0, 0, 0), cb2[7].x
if_nz r0.x
  mul r6.xyzw, r6.xyzw, l(0.500000, 0.500000, 0.500000, 0.500000)
endif 
ine r0.x, l(0, 0, 0, 0), cb2[9].x
if_nz r0.x
  max r0.x, r3.w, l(0.000000)
  lt r0.x, r0.x, cb2[0].w
  if_nz r0.x
    mov r6.xyz, cb2[0].xyzx
  endif 
endif 
ine r0.x, l(0, 0, 0, 0), cb2[12].x
if_nz r0.x
  sqrt r0.x, r2.w
  div r0.x, r0.x, cb2[1].w
  add r6.xyz, r0.xxxx, r6.xyzx
endif 
ine r0.x, l(0, 0, 0, 0), cb2[6].x
if_nz r0.x
  dp4 r0.x, r6.xyzw, cb2[2].xyzw
  dp4 r0.y, r6.xyzw, cb2[3].xyzw
  dp4 r0.z, r6.xyzw, cb2[4].xyzw
  dp4 r0.w, r6.xyzw, cb2[5].xyzw
  mov r6.xyzw, r0.xyzw
endif 
mov o0.xyzw, r6.xyzw
ret 
// Approximately 1980 instruction slots used
