//
// Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
//
//
// Buffer Definitions: 
//
// cbuffer ViewportArt
// {
//
//   float4 f4ColorViewportOutline;     // Offset:    0 Size:    16
//   float4 f4FogParams;                // Offset:   16 Size:    16
//   float4x4 mColorModification;       // Offset:   32 Size:    64
//   bool abArt[16];                    // Offset:   96 Size:   244
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim Slot Elements
// ------------------------------ ---------- ------- ----------- ---- --------
// ViewportArt                       cbuffer      NA          NA    2        1
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue Format   Used
// -------------------- ----- ------ -------- -------- ------ ------
// SV_POSITION              0   xyzw        0      POS  float       
// NORMAL                   0   xyz         1     NONE  float   xyz 
// LIGHTS                   5      w        1     NONE  float       
// TANGENT                  0   xyz         2     NONE  float       
// LIGHTS                  16      w        2     NONE  float       
// BITANGENT                0   xyz         3     NONE  float       
// LIGHTS                  17      w        3     NONE  float       
// TEXCOORD                 0   xy          4     NONE  float       
// LIGHTS                   4     zw        4     NONE  float       
// TEXCOORD                 1   xyz         5     NONE  float   xyz 
// LIGHTS                  29      w        5     NONE  float       
// TEXCOORD                 2   xyzw        6     NONE  float   xyz 
// LIGHTS                   0   xyzw        7     NONE  float       
// LIGHTS                   2   xyzw        8     NONE  float       
// LIGHTS                   3   xyzw        9     NONE  float       
// LIGHTS                   6   xyzw       10     NONE   uint       
// LIGHTS                  10   xyzw       11     NONE   uint       
// LIGHTS                  11   xyzw       12     NONE  float       
// LIGHTS                  12   xyzw       13     NONE  float       
// LIGHTS                  14   xyzw       14     NONE  float       
// LIGHTS                  15   xyzw       15     NONE  float       
// LIGHTS                  21   xyzw       16     NONE   uint       
// LIGHTS                  23   xyzw       17     NONE  float       
// LIGHTS                  24   xyzw       18     NONE  float       
// LIGHTS                  26   xyzw       19     NONE  float       
// LIGHTS                  27   xyz        20     NONE  float       
// LIGHTS                  32   xyzw       21     NONE   uint       
// LIGHTS                  35   xyzw       22     NONE  float       
// LIGHTS                  36   xyzw       23     NONE  float       
// LIGHTS                  38   xyzw       24     NONE  float       
// LIGHTS                  39   xyz        25     NONE  float       
// LIGHTS                  43   xyzw       26     NONE   uint       
// LIGHTS                  47   xyzw       27     NONE  float       
// COUNT                    0   x          28     NONE   uint       
// COLOR                    0   xyzw       29     NONE  float   xyzw
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue Format   Used
// -------------------- ----- ------ -------- -------- ------ ------
// SV_Target                0   xyzw        0   TARGET  float   xyzw
//
ps_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer cb2[13], immediateIndexed
dcl_input_ps linear v1.xyz
dcl_input_ps linear v5.xyz
dcl_input_ps linear v6.xyz
dcl_input_ps linear v29.xyzw
dcl_output o0.xyzw
dcl_temps 3
add r0.xyz, v5.xyzx, -v6.xyzx
dp3 r0.w, r0.xyzx, r0.xyzx
rsq r1.x, r0.w
sqrt r0.w, r0.w
div r0.w, r0.w, cb2[1].w
mul r0.xyz, r0.xyzx, r1.xxxx
dp3 r0.x, r0.xyzx, v1.xyzx
max r0.x, r0.x, l(0.000000)
lt r0.x, r0.x, cb2[0].w
mul r1.xyzw, v29.xyzw, l(0.500000, 0.500000, 0.500000, 0.500000)
movc r1.xyzw, cb2[7].xxxx, r1.xyzw, v29.xyzw
movc r0.xyz, r0.xxxx, cb2[0].xyzx, r1.xyzx
movc r0.xyz, cb2[9].xxxx, r0.xyzx, r1.xyzx
add r2.xyz, r0.wwww, r0.xyzx
movc r1.xyz, cb2[12].xxxx, r2.xyzx, r0.xyzx
dp4 r0.x, r1.xyzw, cb2[2].xyzw
dp4 r0.y, r1.xyzw, cb2[3].xyzw
dp4 r0.z, r1.xyzw, cb2[4].xyzw
dp4 r0.w, r1.xyzw, cb2[5].xyzw
movc o0.xyzw, cb2[6].xxxx, r0.xyzw, r1.xyzw
ret 
// Approximately 21 instruction slots used
